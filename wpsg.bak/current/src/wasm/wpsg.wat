(module (export "setRate" (func $set_rate)) (export "init" (func $init)) (export "update" (func $update)) (export "reset" (func $reset)) (import "env" "memory" (memory $memory 0))   (data (i32.const 512) "\80\67\4f\39\26\16\0a\03\01\03\0a\16\26\39\4f\67\7f\98\b0\c6\d9\e9\f5\fc\ff\fc\f5\e9\d9\c6\b0\98")(data (i32.const 576) "\80\67\4f\39\26\16\0a\03\01\03\0a\16\26\39\4f\67\7f\98\b0\c6\d9\e9\f5\fc\ff\fc\f5\e9\d9\c6\b0\98")(data (i32.const 640) "\80\67\4f\39\26\16\0a\03\01\03\0a\16\26\39\4f\67\7f\98\b0\c6\d9\e9\f5\fc\ff\fc\f5\e9\d9\c6\b0\98")(data (i32.const 704) "\80\67\4f\39\26\16\0a\03\01\03\0a\16\26\39\4f\67\7f\98\b0\c6\d9\e9\f5\fc\ff\fc\f5\e9\d9\c6\b0\98")(data (i32.const 768) "\80\67\4f\39\26\16\0a\03\01\03\0a\16\26\39\4f\67\7f\98\b0\c6\d9\e9\f5\fc\ff\fc\f5\e9\d9\c6\b0\98") (func $set_rate (param $r i32) (i64.store (i32.const 832) (select (i64.const 180633600) (i64.shl (i64.extend_i32_s (local.get $r)) (i64.const 32)) (local.get $r) ) ) (call $reset) ) (func $init (call $reset) ) (func $reset (local $c i32) (local $o i32) (local.set $o (i32.const 512)) (block $reset_exit (loop $reset_loop (br_if $reset_exit (i32.gt_s (local.get $o) (i32.const 832)))  (i64.store (i32.add (i32.const 32) (local.get $o)) (i64.shl (i64.extend_i32_s (i32.load (i32.add (i32.const 52) (local.get $o)))) (i64.const 25)) )  (i32.store (i32.add (i32.const 52) (local.get $o)) (i32.const 1802240))  (i64.store (i32.add (i32.const 40) (local.get $o)) (i64.const 0))  (i32.store (i32.add (i32.const 48) (local.get $o)) (i32.const 4096))  (i32.store (i32.add (i32.const 56) (local.get $o)) (i32.const 0)) (local.set $o (i32.add (local.get $o) (i32.const 64))) (br $reset_loop) ) ) ) (func $update (local $i i32) (local $c i32) (local $o i32) (local $sample_counter i32) (local $output f32) (local.set $i (i32.const 0)) (block $update_exit (loop $update_loop (br_if $update_exit (i32.gt_s (local.get $i) (i32.const 512))) (local.set $o (i32.const 512)) (if (i32.and (i32.load (i32.add (i32.const 60) (local.get $o))) (i32.const 0x1)) (then (local.set $output (f32.const 0.0)) (block $process_exit (loop $process_loop (local.set $sample_counter (i32.add (i32.const 40) (local.get $o))) (i64.store (local.get $sample_counter) (i64.add (i64.load (local.get $sample_counter)) (i64.load (i32.add (i32.const 32) (local.get $o)) ) ) ) (if (i64.gt_s (i64.load (local.get $sample_counter)) (i64.load (i32.const 832)) ) (then (i32.store (i32.add (i32.const 56) (local.get $o)) (i32.and (i32.add (i32.load (i32.add (i32.const 56) (local.get $o))) (i32.const 1) ) (i32.const 0x1f) ) ) (i64.store (local.get $sample_counter) (i64.sub (i64.load (local.get $sample_counter)) (i64.load (i32.const 832)) ) ) ) ) (local.set $output (f32.add (local.get $output) (f32.div (f32.convert_i64_s (i64.mul (i64.load8_s (i32.add (i32.load (i32.add (i32.const 56) (local.get $o))) (i32.const 0) ) ) (i64.extend_i32_s (i32.load (i32.add (i32.const 48) (local.get $o))) ) ) ) (f32.const 8388608.0) ) ) ) (local.set $o (i32.add (local.get $o) (i32.const 64))) (br $process_loop) ) ) (f32.store (i32.add (i32.const 0) (local.get $i)) (select (f32.const 1.0) (select (f32.const -1.0) (local.get $output) (f32.lt (local.get $output) (f32.const -1.0)) ) (f32.gt (local.get $output) (f32.const 1.0)) ) ) ) ) (local.set $i (i32.add (local.get $i) (i32.const 4))) (br $update_loop) ) ) ) ) 