{"version":3,"file":"main.js","sources":["../src/js/eventEmitter3.js","../src/js/gl-matrix/gl-matrix/common.js","../src/js/gl-matrix/gl-matrix/mat3.js","../src/js/gl-matrix/gl-matrix/mat4.js","../src/js/gl-matrix/gl-matrix/vec3.js","../src/js/gl-matrix/gl-matrix/vec4.js","../src/js/gl-matrix/gl-matrix/quat.js","../src/js/gl-matrix/gl-matrix/vec2.js","../src/js/gl2.js","../src/js/screen.js","../src/js/scene.js","../src/js/vscreen.js","../src/js/text2.js","../src/js/console.js","../src/js/vox.js","../src/js/voxscreen.js","../src/js/main.js"],"sourcesContent":["'use strict';\r\n\r\n//\r\n// We store our EE objects in a plain object whose properties are event names.\r\n// If `Object.create(null)` is not supported we prefix the event names with a\r\n// `~` to make sure that the built-in object properties are not overridden or\r\n// used as an attack vector.\r\n// We also assume that `Object.create(null)` is available when the event name\r\n// is an ES6 Symbol.\r\n//\r\nvar prefix = typeof Object.create !== 'function' ? '~' : false;\r\n\r\n/**\r\n * Representation of a single EventEmitter function.\r\n *\r\n * @param {Function} fn Event handler to be called.\r\n * @param {Mixed} context Context for function execution.\r\n * @param {Boolean} once Only emit once\r\n * @api private\r\n */\r\nfunction EE(fn, context, once) {\r\n  this.fn = fn;\r\n  this.context = context;\r\n  this.once = once || false;\r\n}\r\n\r\n/**\r\n * Minimal EventEmitter interface that is molded against the Node.js\r\n * EventEmitter interface.\r\n *\r\n * @constructor\r\n * @api public\r\n */\r\nexport default function EventEmitter() { /* Nothing to set */ }\r\n\r\n/**\r\n * Holds the assigned EventEmitters by name.\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\nEventEmitter.prototype._events = undefined;\r\n\r\n/**\r\n * Return a list of assigned event listeners.\r\n *\r\n * @param {String} event The events that should be listed.\r\n * @param {Boolean} exists We only need to know if there are listeners.\r\n * @returns {Array|Boolean}\r\n * @api public\r\n */\r\nEventEmitter.prototype.listeners = function listeners(event, exists) {\r\n  var evt = prefix ? prefix + event : event\r\n    , available = this._events && this._events[evt];\r\n\r\n  if (exists) return !!available;\r\n  if (!available) return [];\r\n  if (available.fn) return [available.fn];\r\n\r\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\r\n    ee[i] = available[i].fn;\r\n  }\r\n\r\n  return ee;\r\n};\r\n\r\n/**\r\n * Emit an event to all registered event listeners.\r\n *\r\n * @param {String} event The name of the event.\r\n * @returns {Boolean} Indication if we've emitted an event.\r\n * @api public\r\n */\r\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\r\n  var evt = prefix ? prefix + event : event;\r\n\r\n  if (!this._events || !this._events[evt]) return false;\r\n\r\n  var listeners = this._events[evt]\r\n    , len = arguments.length\r\n    , args\r\n    , i;\r\n\r\n  if ('function' === typeof listeners.fn) {\r\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\r\n\r\n    switch (len) {\r\n      case 1: return listeners.fn.call(listeners.context), true;\r\n      case 2: return listeners.fn.call(listeners.context, a1), true;\r\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\r\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\r\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\r\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\r\n    }\r\n\r\n    for (i = 1, args = new Array(len -1); i < len; i++) {\r\n      args[i - 1] = arguments[i];\r\n    }\r\n\r\n    listeners.fn.apply(listeners.context, args);\r\n  } else {\r\n    var length = listeners.length\r\n      , j;\r\n\r\n    for (i = 0; i < length; i++) {\r\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\r\n\r\n      switch (len) {\r\n        case 1: listeners[i].fn.call(listeners[i].context); break;\r\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\r\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\r\n        default:\r\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\r\n            args[j - 1] = arguments[j];\r\n          }\r\n\r\n          listeners[i].fn.apply(listeners[i].context, args);\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n/**\r\n * Register a new EventListener for the given event.\r\n *\r\n * @param {String} event Name of the event.\r\n * @param {Functon} fn Callback function.\r\n * @param {Mixed} context The context of the function.\r\n * @api public\r\n */\r\nEventEmitter.prototype.on = function on(event, fn, context) {\r\n  var listener = new EE(fn, context || this)\r\n    , evt = prefix ? prefix + event : event;\r\n\r\n  if (!this._events) this._events = prefix ? {} : Object.create(null);\r\n  if (!this._events[evt]) this._events[evt] = listener;\r\n  else {\r\n    if (!this._events[evt].fn) this._events[evt].push(listener);\r\n    else this._events[evt] = [\r\n      this._events[evt], listener\r\n    ];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Add an EventListener that's only called once.\r\n *\r\n * @param {String} event Name of the event.\r\n * @param {Function} fn Callback function.\r\n * @param {Mixed} context The context of the function.\r\n * @api public\r\n */\r\nEventEmitter.prototype.once = function once(event, fn, context) {\r\n  var listener = new EE(fn, context || this, true)\r\n    , evt = prefix ? prefix + event : event;\r\n\r\n  if (!this._events) this._events = prefix ? {} : Object.create(null);\r\n  if (!this._events[evt]) this._events[evt] = listener;\r\n  else {\r\n    if (!this._events[evt].fn) this._events[evt].push(listener);\r\n    else this._events[evt] = [\r\n      this._events[evt], listener\r\n    ];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove event listeners.\r\n *\r\n * @param {String} event The event we want to remove.\r\n * @param {Function} fn The listener that we need to find.\r\n * @param {Mixed} context Only remove listeners matching this context.\r\n * @param {Boolean} once Only remove once listeners.\r\n * @api public\r\n */\r\n\r\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\r\n  var evt = prefix ? prefix + event : event;\r\n\r\n  if (!this._events || !this._events[evt]) return this;\r\n\r\n  var listeners = this._events[evt]\r\n    , events = [];\r\n\r\n  if (fn) {\r\n    if (listeners.fn) {\r\n      if (\r\n           listeners.fn !== fn\r\n        || (once && !listeners.once)\r\n        || (context && listeners.context !== context)\r\n      ) {\r\n        events.push(listeners);\r\n      }\r\n    } else {\r\n      for (var i = 0, length = listeners.length; i < length; i++) {\r\n        if (\r\n             listeners[i].fn !== fn\r\n          || (once && !listeners[i].once)\r\n          || (context && listeners[i].context !== context)\r\n        ) {\r\n          events.push(listeners[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //\r\n  // Reset the array, or remove it completely if we have no more listeners.\r\n  //\r\n  if (events.length) {\r\n    this._events[evt] = events.length === 1 ? events[0] : events;\r\n  } else {\r\n    delete this._events[evt];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove all listeners or only the listeners for the specified event.\r\n *\r\n * @param {String} event The event want to remove all listeners for.\r\n * @api public\r\n */\r\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\r\n  if (!this._events) return this;\r\n\r\n  if (event) delete this._events[prefix ? prefix + event : event];\r\n  else this._events = prefix ? {} : Object.create(null);\r\n\r\n  return this;\r\n};\r\n\r\n//\r\n// Alias methods names because people roll like that.\r\n//\r\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\r\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\r\n\r\n//\r\n// This function doesn't apply anymore.\r\n//\r\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\r\n  return this;\r\n};\r\n\r\n//\r\n// Expose the prefix.\r\n//\r\nEventEmitter.prefixed = prefix;\r\n\r\n//\r\n// Expose the module.\r\n//\r\nif ('undefined' !== typeof module) {\r\n module.exports = EventEmitter;\r\n}\r\n\r\n\r\n\r\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE. */\r\n\r\n/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n\r\n// Configuration Constants\r\nexport const EPSILON = 0.000001;\r\nexport let ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\r\nexport const RANDOM = Math.random;\r\n\r\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\r\nexport function setMatrixArrayType(type) {\r\n  ARRAY_TYPE = type;\r\n}\r\n\r\nconst degree = Math.PI / 180;\r\n\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\nexport function toRadian(a) {\r\n  return a * degree;\r\n}\r\n\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  return Math.abs(a - b) <= EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}\r\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE. */\r\n\r\nimport * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\r\n\r\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function create() {\r\n  let out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\r\nexport function fromMat4(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[4];\r\n  out[4] = a[5];\r\n  out[5] = a[6];\r\n  out[6] = a[8];\r\n  out[7] = a[9];\r\n  out[8] = a[10];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function clone(a) {\r\n  let out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\r\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  let out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\r\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    let a01 = a[1], a02 = a[2], a12 = a[5];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a01;\r\n    out[5] = a[7];\r\n    out[6] = a02;\r\n    out[7] = a12;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a[1];\r\n    out[4] = a[4];\r\n    out[5] = a[7];\r\n    out[6] = a[2];\r\n    out[7] = a[5];\r\n    out[8] = a[8];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function invert(out, a) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2];\r\n  let a10 = a[3], a11 = a[4], a12 = a[5];\r\n  let a20 = a[6], a21 = a[7], a22 = a[8];\r\n\r\n  let b01 = a22 * a11 - a12 * a21;\r\n  let b11 = -a22 * a10 + a12 * a20;\r\n  let b21 = a21 * a10 - a11 * a20;\r\n\r\n  // Calculate the determinant\r\n  let det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = b01 * det;\r\n  out[1] = (-a22 * a01 + a02 * a21) * det;\r\n  out[2] = (a12 * a01 - a02 * a11) * det;\r\n  out[3] = b11 * det;\r\n  out[4] = (a22 * a00 - a02 * a20) * det;\r\n  out[5] = (-a12 * a00 + a02 * a10) * det;\r\n  out[6] = b21 * det;\r\n  out[7] = (-a21 * a00 + a01 * a20) * det;\r\n  out[8] = (a11 * a00 - a01 * a10) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function adjoint(out, a) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2];\r\n  let a10 = a[3], a11 = a[4], a12 = a[5];\r\n  let a20 = a[6], a21 = a[7], a22 = a[8];\r\n\r\n  out[0] = (a11 * a22 - a12 * a21);\r\n  out[1] = (a02 * a21 - a01 * a22);\r\n  out[2] = (a01 * a12 - a02 * a11);\r\n  out[3] = (a12 * a20 - a10 * a22);\r\n  out[4] = (a00 * a22 - a02 * a20);\r\n  out[5] = (a02 * a10 - a00 * a12);\r\n  out[6] = (a10 * a21 - a11 * a20);\r\n  out[7] = (a01 * a20 - a00 * a21);\r\n  out[8] = (a00 * a11 - a01 * a10);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2];\r\n  let a10 = a[3], a11 = a[4], a12 = a[5];\r\n  let a20 = a[6], a21 = a[7], a22 = a[8];\r\n\r\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n}\r\n\r\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2];\r\n  let a10 = a[3], a11 = a[4], a12 = a[5];\r\n  let a20 = a[6], a21 = a[7], a22 = a[8];\r\n\r\n  let b00 = b[0], b01 = b[1], b02 = b[2];\r\n  let b10 = b[3], b11 = b[4], b12 = b[5];\r\n  let b20 = b[6], b21 = b[7], b22 = b[8];\r\n\r\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\r\nexport function translate(out, a, v) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2],\r\n    a10 = a[3], a11 = a[4], a12 = a[5],\r\n    a20 = a[6], a21 = a[7], a22 = a[8],\r\n    x = v[0], y = v[1];\r\n\r\n  out[0] = a00;\r\n  out[1] = a01;\r\n  out[2] = a02;\r\n\r\n  out[3] = a10;\r\n  out[4] = a11;\r\n  out[5] = a12;\r\n\r\n  out[6] = x * a00 + y * a10 + a20;\r\n  out[7] = x * a01 + y * a11 + a21;\r\n  out[8] = x * a02 + y * a12 + a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2],\r\n    a10 = a[3], a11 = a[4], a12 = a[5],\r\n    a20 = a[6], a21 = a[7], a22 = a[8],\r\n\r\n    s = Math.sin(rad),\r\n    c = Math.cos(rad);\r\n\r\n  out[0] = c * a00 + s * a10;\r\n  out[1] = c * a01 + s * a11;\r\n  out[2] = c * a02 + s * a12;\r\n\r\n  out[3] = c * a10 - s * a00;\r\n  out[4] = c * a11 - s * a01;\r\n  out[5] = c * a12 - s * a02;\r\n\r\n  out[6] = a20;\r\n  out[7] = a21;\r\n  out[8] = a22;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  let x = v[0], y = v[1];\r\n\r\n  out[0] = x * a[0];\r\n  out[1] = x * a[1];\r\n  out[2] = x * a[2];\r\n\r\n  out[3] = y * a[3];\r\n  out[4] = y * a[4];\r\n  out[5] = y * a[5];\r\n\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = v[0];\r\n  out[7] = v[1];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  let s = Math.sin(rad), c = Math.cos(rad);\r\n\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n\r\n  out[3] = -s;\r\n  out[4] = c;\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n\r\n  out[3] = 0;\r\n  out[4] = v[1];\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\r\nexport function fromMat2d(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = 0;\r\n\r\n  out[3] = a[2];\r\n  out[4] = a[3];\r\n  out[5] = 0;\r\n\r\n  out[6] = a[4];\r\n  out[7] = a[5];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function fromQuat(out, q) {\r\n  let x = q[0], y = q[1], z = q[2], w = q[3];\r\n  let x2 = x + x;\r\n  let y2 = y + y;\r\n  let z2 = z + z;\r\n\r\n  let xx = x * x2;\r\n  let yx = y * x2;\r\n  let yy = y * y2;\r\n  let zx = z * x2;\r\n  let zy = z * y2;\r\n  let zz = z * z2;\r\n  let wx = w * x2;\r\n  let wy = w * y2;\r\n  let wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[3] = yx - wz;\r\n  out[6] = zx + wy;\r\n\r\n  out[1] = yx + wz;\r\n  out[4] = 1 - xx - zz;\r\n  out[7] = zy - wx;\r\n\r\n  out[2] = zx - wy;\r\n  out[5] = zy + wx;\r\n  out[8] = 1 - xx - yy;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function normalFromMat4(out, a) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\r\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\r\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\r\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n  let b00 = a00 * a11 - a01 * a10;\r\n  let b01 = a00 * a12 - a02 * a10;\r\n  let b02 = a00 * a13 - a03 * a10;\r\n  let b03 = a01 * a12 - a02 * a11;\r\n  let b04 = a01 * a13 - a03 * a11;\r\n  let b05 = a02 * a13 - a03 * a12;\r\n  let b06 = a20 * a31 - a21 * a30;\r\n  let b07 = a20 * a32 - a22 * a30;\r\n  let b08 = a20 * a33 - a23 * a30;\r\n  let b09 = a21 * a32 - a22 * a31;\r\n  let b10 = a21 * a33 - a23 * a31;\r\n  let b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\r\nexport function projection(out, width, height) {\r\n    out[0] = 2 / width;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = -2 / height;\r\n    out[5] = 0;\r\n    out[6] = -1;\r\n    out[7] = 1;\r\n    out[8] = 1;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\r\n          a[3] + ', ' + a[4] + ', ' + a[5] + ', ' +\r\n          a[6] + ', ' + a[7] + ', ' + a[8] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\r\n}\r\n\r\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  return out;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + (b[0] * scale);\r\n  out[1] = a[1] + (b[1] * scale);\r\n  out[2] = a[2] + (b[2] * scale);\r\n  out[3] = a[3] + (b[3] * scale);\r\n  out[4] = a[4] + (b[4] * scale);\r\n  out[5] = a[5] + (b[5] * scale);\r\n  out[6] = a[6] + (b[6] * scale);\r\n  out[7] = a[7] + (b[7] * scale);\r\n  out[8] = a[8] + (b[8] * scale);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] &&\r\n         a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&\r\n         a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];\r\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8];\r\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\r\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\r\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\r\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\r\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\r\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\r\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\r\nexport const mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\r\nexport const sub = subtract;\r\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE. */\r\n\r\nimport * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4x4 Matrix\r\n * @module mat4\r\n */\r\n\r\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function create() {\r\n  let out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function clone(a) {\r\n  let out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\r\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  let out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\r\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    let a01 = a[1], a02 = a[2], a03 = a[3];\r\n    let a12 = a[6], a13 = a[7];\r\n    let a23 = a[11];\r\n\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a01;\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a02;\r\n    out[9] = a12;\r\n    out[11] = a[14];\r\n    out[12] = a03;\r\n    out[13] = a13;\r\n    out[14] = a23;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a[1];\r\n    out[5] = a[5];\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a[2];\r\n    out[9] = a[6];\r\n    out[10] = a[10];\r\n    out[11] = a[14];\r\n    out[12] = a[3];\r\n    out[13] = a[7];\r\n    out[14] = a[11];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function invert(out, a) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\r\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\r\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\r\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n  let b00 = a00 * a11 - a01 * a10;\r\n  let b01 = a00 * a12 - a02 * a10;\r\n  let b02 = a00 * a13 - a03 * a10;\r\n  let b03 = a01 * a12 - a02 * a11;\r\n  let b04 = a01 * a13 - a03 * a11;\r\n  let b05 = a02 * a13 - a03 * a12;\r\n  let b06 = a20 * a31 - a21 * a30;\r\n  let b07 = a20 * a32 - a22 * a30;\r\n  let b08 = a20 * a33 - a23 * a30;\r\n  let b09 = a21 * a32 - a22 * a31;\r\n  let b10 = a21 * a33 - a23 * a31;\r\n  let b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function adjoint(out, a) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\r\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\r\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\r\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n  out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\r\n  out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n  out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\r\n  out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n  out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n  out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\r\n  out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n  out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\r\n  out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\r\n  out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n  out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\r\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n  out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\r\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n  out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\r\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\r\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\r\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n  let b00 = a00 * a11 - a01 * a10;\r\n  let b01 = a00 * a12 - a02 * a10;\r\n  let b02 = a00 * a13 - a03 * a10;\r\n  let b03 = a01 * a12 - a02 * a11;\r\n  let b04 = a01 * a13 - a03 * a11;\r\n  let b05 = a02 * a13 - a03 * a12;\r\n  let b06 = a20 * a31 - a21 * a30;\r\n  let b07 = a20 * a32 - a22 * a30;\r\n  let b08 = a20 * a33 - a23 * a30;\r\n  let b09 = a21 * a32 - a22 * a31;\r\n  let b10 = a21 * a33 - a23 * a31;\r\n  let b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n}\r\n\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\r\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\r\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\r\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n  // Cache only the current line of the second matrix\r\n  let b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\r\n  out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n  out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n  out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n  out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n  b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\r\n  out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n  out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n  out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n  out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n  b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\r\n  out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n  out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n  out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n  out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n  b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\r\n  out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n  out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n  out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n  out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\nexport function translate(out, a, v) {\r\n  let x = v[0], y = v[1], z = v[2];\r\n  let a00, a01, a02, a03;\r\n  let a10, a11, a12, a13;\r\n  let a20, a21, a22, a23;\r\n\r\n  if (a === out) {\r\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n  } else {\r\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\r\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\r\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\r\n\r\n    out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\r\n    out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\r\n    out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\r\n\r\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  let x = v[0], y = v[1], z = v[2];\r\n\r\n  out[0] = a[0] * x;\r\n  out[1] = a[1] * x;\r\n  out[2] = a[2] * x;\r\n  out[3] = a[3] * x;\r\n  out[4] = a[4] * y;\r\n  out[5] = a[5] * y;\r\n  out[6] = a[6] * y;\r\n  out[7] = a[7] * y;\r\n  out[8] = a[8] * z;\r\n  out[9] = a[9] * z;\r\n  out[10] = a[10] * z;\r\n  out[11] = a[11] * z;\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function rotate(out, a, rad, axis) {\r\n  let x = axis[0], y = axis[1], z = axis[2];\r\n  let len = Math.sqrt(x * x + y * y + z * z);\r\n  let s, c, t;\r\n  let a00, a01, a02, a03;\r\n  let a10, a11, a12, a13;\r\n  let a20, a21, a22, a23;\r\n  let b00, b01, b02;\r\n  let b10, b11, b12;\r\n  let b20, b21, b22;\r\n\r\n  if (Math.abs(len) < glMatrix.EPSILON) { return null; }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\r\n  a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\r\n  a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\r\n\r\n  // Construct the elements of the rotation matrix\r\n  b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\r\n  b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\r\n  b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  let s = Math.sin(rad);\r\n  let c = Math.cos(rad);\r\n  let a10 = a[4];\r\n  let a11 = a[5];\r\n  let a12 = a[6];\r\n  let a13 = a[7];\r\n  let a20 = a[8];\r\n  let a21 = a[9];\r\n  let a22 = a[10];\r\n  let a23 = a[11];\r\n\r\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\r\n    out[0]  = a[0];\r\n    out[1]  = a[1];\r\n    out[2]  = a[2];\r\n    out[3]  = a[3];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[4] = a10 * c + a20 * s;\r\n  out[5] = a11 * c + a21 * s;\r\n  out[6] = a12 * c + a22 * s;\r\n  out[7] = a13 * c + a23 * s;\r\n  out[8] = a20 * c - a10 * s;\r\n  out[9] = a21 * c - a11 * s;\r\n  out[10] = a22 * c - a12 * s;\r\n  out[11] = a23 * c - a13 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  let s = Math.sin(rad);\r\n  let c = Math.cos(rad);\r\n  let a00 = a[0];\r\n  let a01 = a[1];\r\n  let a02 = a[2];\r\n  let a03 = a[3];\r\n  let a20 = a[8];\r\n  let a21 = a[9];\r\n  let a22 = a[10];\r\n  let a23 = a[11];\r\n\r\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\r\n    out[4]  = a[4];\r\n    out[5]  = a[5];\r\n    out[6]  = a[6];\r\n    out[7]  = a[7];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c - a20 * s;\r\n  out[1] = a01 * c - a21 * s;\r\n  out[2] = a02 * c - a22 * s;\r\n  out[3] = a03 * c - a23 * s;\r\n  out[8] = a00 * s + a20 * c;\r\n  out[9] = a01 * s + a21 * c;\r\n  out[10] = a02 * s + a22 * c;\r\n  out[11] = a03 * s + a23 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  let s = Math.sin(rad);\r\n  let c = Math.cos(rad);\r\n  let a00 = a[0];\r\n  let a01 = a[1];\r\n  let a02 = a[2];\r\n  let a03 = a[3];\r\n  let a10 = a[4];\r\n  let a11 = a[5];\r\n  let a12 = a[6];\r\n  let a13 = a[7];\r\n\r\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\r\n    out[8]  = a[8];\r\n    out[9]  = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c + a10 * s;\r\n  out[1] = a01 * c + a11 * s;\r\n  out[2] = a02 * c + a12 * s;\r\n  out[3] = a03 * c + a13 * s;\r\n  out[4] = a10 * c - a00 * s;\r\n  out[5] = a11 * c - a01 * s;\r\n  out[6] = a12 * c - a02 * s;\r\n  out[7] = a13 * c - a03 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = v[1];\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = v[2];\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotation(out, rad, axis) {\r\n  let x = axis[0], y = axis[1], z = axis[2];\r\n  let len = Math.sqrt(x * x + y * y + z * z);\r\n  let s, c, t;\r\n\r\n  if (Math.abs(len) < glMatrix.EPSILON) { return null; }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = x * x * t + c;\r\n  out[1] = y * x * t + z * s;\r\n  out[2] = z * x * t - y * s;\r\n  out[3] = 0;\r\n  out[4] = x * y * t - z * s;\r\n  out[5] = y * y * t + c;\r\n  out[6] = z * y * t + x * s;\r\n  out[7] = 0;\r\n  out[8] = x * z * t + y * s;\r\n  out[9] = y * z * t - x * s;\r\n  out[10] = z * z * t + c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromXRotation(out, rad) {\r\n  let s = Math.sin(rad);\r\n  let c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0]  = 1;\r\n  out[1]  = 0;\r\n  out[2]  = 0;\r\n  out[3]  = 0;\r\n  out[4] = 0;\r\n  out[5] = c;\r\n  out[6] = s;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = -s;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromYRotation(out, rad) {\r\n  let s = Math.sin(rad);\r\n  let c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0]  = c;\r\n  out[1]  = 0;\r\n  out[2]  = -s;\r\n  out[3]  = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = s;\r\n  out[9] = 0;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromZRotation(out, rad) {\r\n  let s = Math.sin(rad);\r\n  let c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0]  = c;\r\n  out[1]  = s;\r\n  out[2]  = 0;\r\n  out[3]  = 0;\r\n  out[4] = -s;\r\n  out[5] = c;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslation(out, q, v) {\r\n  // Quaternion math\r\n  let x = q[0], y = q[1], z = q[2], w = q[3];\r\n  let x2 = x + x;\r\n  let y2 = y + y;\r\n  let z2 = z + z;\r\n\r\n  let xx = x * x2;\r\n  let xy = x * y2;\r\n  let xz = x * z2;\r\n  let yy = y * y2;\r\n  let yz = y * z2;\r\n  let zz = z * z2;\r\n  let wx = w * x2;\r\n  let wy = w * y2;\r\n  let wz = w * z2;\r\n\r\n  out[0] = 1 - (yy + zz);\r\n  out[1] = xy + wz;\r\n  out[2] = xz - wy;\r\n  out[3] = 0;\r\n  out[4] = xy - wz;\r\n  out[5] = 1 - (xx + zz);\r\n  out[6] = yz + wx;\r\n  out[7] = 0;\r\n  out[8] = xz + wy;\r\n  out[9] = yz - wx;\r\n  out[10] = 1 - (xx + yy);\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getTranslation(out, mat) {\r\n  out[0] = mat[12];\r\n  out[1] = mat[13];\r\n  out[2] = mat[14];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getScaling(out, mat) {\r\n  let m11 = mat[0];\r\n  let m12 = mat[1];\r\n  let m13 = mat[2];\r\n  let m21 = mat[4];\r\n  let m22 = mat[5];\r\n  let m23 = mat[6];\r\n  let m31 = mat[8];\r\n  let m32 = mat[9];\r\n  let m33 = mat[10];\r\n\r\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\nexport function getRotation(out, mat) {\r\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n  let trace = mat[0] + mat[5] + mat[10];\r\n  let S = 0;\r\n\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out[3] = 0.25 * S;\r\n    out[0] = (mat[6] - mat[9]) / S;\r\n    out[1] = (mat[8] - mat[2]) / S;\r\n    out[2] = (mat[1] - mat[4]) / S;\r\n  } else if ((mat[0] > mat[5])&(mat[0] > mat[10])) {\r\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\r\n    out[3] = (mat[6] - mat[9]) / S;\r\n    out[0] = 0.25 * S;\r\n    out[1] = (mat[1] + mat[4]) / S;\r\n    out[2] = (mat[8] + mat[2]) / S;\r\n  } else if (mat[5] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\r\n    out[3] = (mat[8] - mat[2]) / S;\r\n    out[0] = (mat[1] + mat[4]) / S;\r\n    out[1] = 0.25 * S;\r\n    out[2] = (mat[6] + mat[9]) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\r\n    out[3] = (mat[1] - mat[4]) / S;\r\n    out[0] = (mat[8] + mat[2]) / S;\r\n    out[1] = (mat[6] + mat[9]) / S;\r\n    out[2] = 0.25 * S;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScale(out, q, v, s) {\r\n  // Quaternion math\r\n  let x = q[0], y = q[1], z = q[2], w = q[3];\r\n  let x2 = x + x;\r\n  let y2 = y + y;\r\n  let z2 = z + z;\r\n\r\n  let xx = x * x2;\r\n  let xy = x * y2;\r\n  let xz = x * z2;\r\n  let yy = y * y2;\r\n  let yz = y * z2;\r\n  let zz = z * z2;\r\n  let wx = w * x2;\r\n  let wy = w * y2;\r\n  let wz = w * z2;\r\n  let sx = s[0];\r\n  let sy = s[1];\r\n  let sz = s[2];\r\n\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n  // Quaternion math\r\n  let x = q[0], y = q[1], z = q[2], w = q[3];\r\n  let x2 = x + x;\r\n  let y2 = y + y;\r\n  let z2 = z + z;\r\n\r\n  let xx = x * x2;\r\n  let xy = x * y2;\r\n  let xz = x * z2;\r\n  let yy = y * y2;\r\n  let yz = y * z2;\r\n  let zz = z * z2;\r\n  let wx = w * x2;\r\n  let wy = w * y2;\r\n  let wz = w * z2;\r\n\r\n  let sx = s[0];\r\n  let sy = s[1];\r\n  let sz = s[2];\r\n\r\n  let ox = o[0];\r\n  let oy = o[1];\r\n  let oz = o[2];\r\n\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\r\n  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\r\n  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\nexport function fromQuat(out, q) {\r\n  let x = q[0], y = q[1], z = q[2], w = q[3];\r\n  let x2 = x + x;\r\n  let y2 = y + y;\r\n  let z2 = z + z;\r\n\r\n  let xx = x * x2;\r\n  let yx = y * x2;\r\n  let yy = y * y2;\r\n  let zx = z * x2;\r\n  let zy = z * y2;\r\n  let zz = z * z2;\r\n  let wx = w * x2;\r\n  let wy = w * y2;\r\n  let wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[1] = yx + wz;\r\n  out[2] = zx - wy;\r\n  out[3] = 0;\r\n\r\n  out[4] = yx - wz;\r\n  out[5] = 1 - xx - zz;\r\n  out[6] = zy + wx;\r\n  out[7] = 0;\r\n\r\n  out[8] = zx + wy;\r\n  out[9] = zy - wx;\r\n  out[10] = 1 - xx - yy;\r\n  out[11] = 0;\r\n\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function frustum(out, left, right, bottom, top, near, far) {\r\n  let rl = 1 / (right - left);\r\n  let tb = 1 / (top - bottom);\r\n  let nf = 1 / (near - far);\r\n  out[0] = (near * 2) * rl;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = (near * 2) * tb;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = (right + left) * rl;\r\n  out[9] = (top + bottom) * tb;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = (far * near * 2) * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspective(out, fovy, aspect, near, far) {\r\n  let f = 1.0 / Math.tan(fovy / 2);\r\n  let nf = 1 / (near - far);\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = (2 * far * near) * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\r\n  let upTan = Math.tan(fov.upDegrees * Math.PI/180.0);\r\n  let downTan = Math.tan(fov.downDegrees * Math.PI/180.0);\r\n  let leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0);\r\n  let rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0);\r\n  let xScale = 2.0 / (leftTan + rightTan);\r\n  let yScale = 2.0 / (upTan + downTan);\r\n\r\n  out[0] = xScale;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  out[4] = 0.0;\r\n  out[5] = yScale;\r\n  out[6] = 0.0;\r\n  out[7] = 0.0;\r\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n  out[9] = ((upTan - downTan) * yScale * 0.5);\r\n  out[10] = far / (near - far);\r\n  out[11] = -1.0;\r\n  out[12] = 0.0;\r\n  out[13] = 0.0;\r\n  out[14] = (far * near) / (near - far);\r\n  out[15] = 0.0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function ortho(out, left, right, bottom, top, near, far) {\r\n  let lr = 1 / (left - right);\r\n  let bt = 1 / (bottom - top);\r\n  let nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 2 * nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = (far + near) * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function lookAt(out, eye, center, up) {\r\n  let x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\r\n  let eyex = eye[0];\r\n  let eyey = eye[1];\r\n  let eyez = eye[2];\r\n  let upx = up[0];\r\n  let upy = up[1];\r\n  let upz = up[2];\r\n  let centerx = center[0];\r\n  let centery = center[1];\r\n  let centerz = center[2];\r\n\r\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\r\n      Math.abs(eyey - centery) < glMatrix.EPSILON &&\r\n      Math.abs(eyez - centerz) < glMatrix.EPSILON) {\r\n    return identity(out);\r\n  }\r\n\r\n  z0 = eyex - centerx;\r\n  z1 = eyey - centery;\r\n  z2 = eyez - centerz;\r\n\r\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n  z0 *= len;\r\n  z1 *= len;\r\n  z2 *= len;\r\n\r\n  x0 = upy * z2 - upz * z1;\r\n  x1 = upz * z0 - upx * z2;\r\n  x2 = upx * z1 - upy * z0;\r\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n  if (!len) {\r\n    x0 = 0;\r\n    x1 = 0;\r\n    x2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  y0 = z1 * x2 - z2 * x1;\r\n  y1 = z2 * x0 - z0 * x2;\r\n  y2 = z0 * x1 - z1 * x0;\r\n\r\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n  if (!len) {\r\n    y0 = 0;\r\n    y1 = 0;\r\n    y2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    y0 *= len;\r\n    y1 *= len;\r\n    y2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = y0;\r\n  out[2] = z0;\r\n  out[3] = 0;\r\n  out[4] = x1;\r\n  out[5] = y1;\r\n  out[6] = z1;\r\n  out[7] = 0;\r\n  out[8] = x2;\r\n  out[9] = y2;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function targetTo(out, eye, target, up) {\r\n  let eyex = eye[0],\r\n      eyey = eye[1],\r\n      eyez = eye[2],\r\n      upx = up[0],\r\n      upy = up[1],\r\n      upz = up[2];\r\n\r\n  let z0 = eyex - target[0],\r\n      z1 = eyey - target[1],\r\n      z2 = eyez - target[2];\r\n\r\n  let len = z0*z0 + z1*z1 + z2*z2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n  }\r\n\r\n  let x0 = upy * z2 - upz * z1,\r\n      x1 = upz * z0 - upx * z2,\r\n      x2 = upx * z1 - upy * z0;\r\n\r\n  out[0] = x0;\r\n  out[1] = x1;\r\n  out[2] = x2;\r\n  out[3] = 0;\r\n  out[4] = z1 * x2 - z2 * x1;\r\n  out[5] = z2 * x0 - z0 * x2;\r\n  out[6] = z0 * x1 - z1 * x0;\r\n  out[7] = 0;\r\n  out[8] = z0;\r\n  out[9] = z1;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = eyex;\r\n  out[13] = eyey;\r\n  out[14] = eyez;\r\n  out[15] = 1;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\r\n          a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\r\n          a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +\r\n          a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\r\n}\r\n\r\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  out[9] = a[9] + b[9];\r\n  out[10] = a[10] + b[10];\r\n  out[11] = a[11] + b[11];\r\n  out[12] = a[12] + b[12];\r\n  out[13] = a[13] + b[13];\r\n  out[14] = a[14] + b[14];\r\n  out[15] = a[15] + b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  out[9] = a[9] - b[9];\r\n  out[10] = a[10] - b[10];\r\n  out[11] = a[11] - b[11];\r\n  out[12] = a[12] - b[12];\r\n  out[13] = a[13] - b[13];\r\n  out[14] = a[14] - b[14];\r\n  out[15] = a[15] - b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  out[9] = a[9] * b;\r\n  out[10] = a[10] * b;\r\n  out[11] = a[11] * b;\r\n  out[12] = a[12] * b;\r\n  out[13] = a[13] * b;\r\n  out[14] = a[14] * b;\r\n  out[15] = a[15] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + (b[0] * scale);\r\n  out[1] = a[1] + (b[1] * scale);\r\n  out[2] = a[2] + (b[2] * scale);\r\n  out[3] = a[3] + (b[3] * scale);\r\n  out[4] = a[4] + (b[4] * scale);\r\n  out[5] = a[5] + (b[5] * scale);\r\n  out[6] = a[6] + (b[6] * scale);\r\n  out[7] = a[7] + (b[7] * scale);\r\n  out[8] = a[8] + (b[8] * scale);\r\n  out[9] = a[9] + (b[9] * scale);\r\n  out[10] = a[10] + (b[10] * scale);\r\n  out[11] = a[11] + (b[11] * scale);\r\n  out[12] = a[12] + (b[12] * scale);\r\n  out[13] = a[13] + (b[13] * scale);\r\n  out[14] = a[14] + (b[14] * scale);\r\n  out[15] = a[15] + (b[15] * scale);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\r\n         a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] &&\r\n         a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\r\n         a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  let a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3];\r\n  let a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7];\r\n  let a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11];\r\n  let a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];\r\n\r\n  let b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3];\r\n  let b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7];\r\n  let b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11];\r\n  let b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\r\n\r\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\r\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\r\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\r\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\r\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\r\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\r\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\r\n          Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\r\n          Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\r\n          Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\r\n          Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\r\n          Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\r\n          Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\r\n          Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\r\nexport const mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\r\nexport const sub = subtract;\r\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE. */\r\n\r\nimport * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function create() {\r\n  let out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  let x = a[0];\r\n  let y = a[1];\r\n  let z = a[2];\r\n  return Math.sqrt(x*x + y*y + z*z);\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function fromValues(x, y, z) {\r\n  let out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\r\nexport function set(out, x, y, z) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + (b[0] * scale);\r\n  out[1] = a[1] + (b[1] * scale);\r\n  out[2] = a[2] + (b[2] * scale);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  let x = b[0] - a[0];\r\n  let y = b[1] - a[1];\r\n  let z = b[2] - a[2];\r\n  return Math.sqrt(x*x + y*y + z*z);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  let x = b[0] - a[0];\r\n  let y = b[1] - a[1];\r\n  let z = b[2] - a[2];\r\n  return x*x + y*y + z*z;\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  let x = a[0];\r\n  let y = a[1];\r\n  let z = a[2];\r\n  return x*x + y*y + z*z;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\r\nexport function normalize(out, a) {\r\n  let x = a[0];\r\n  let y = a[1];\r\n  let z = a[2];\r\n  let len = x*x + y*y + z*z;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n    out[2] = a[2] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  let ax = a[0], ay = a[1], az = a[2];\r\n  let bx = b[0], by = b[1], bz = b[2];\r\n\r\n  out[0] = ay * bz - az * by;\r\n  out[1] = az * bx - ax * bz;\r\n  out[2] = ax * by - ay * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  let ax = a[0];\r\n  let ay = a[1];\r\n  let az = a[2];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function hermite(out, a, b, c, d, t) {\r\n  let factorTimes2 = t * t;\r\n  let factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n  let factor2 = factorTimes2 * (t - 2) + t;\r\n  let factor3 = factorTimes2 * (t - 1);\r\n  let factor4 = factorTimes2 * (3 - 2 * t);\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function bezier(out, a, b, c, d, t) {\r\n  let inverseFactor = 1 - t;\r\n  let inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n  let factorTimes2 = t * t;\r\n  let factor1 = inverseFactorTimesTwo * inverseFactor;\r\n  let factor2 = 3 * t * inverseFactorTimesTwo;\r\n  let factor3 = 3 * factorTimes2 * inverseFactor;\r\n  let factor4 = factorTimes2 * t;\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  let r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  let z = (glMatrix.RANDOM() * 2.0) - 1.0;\r\n  let zScale = Math.sqrt(1.0-z*z) * scale;\r\n\r\n  out[0] = Math.cos(r) * zScale;\r\n  out[1] = Math.sin(r) * zScale;\r\n  out[2] = z * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  let x = a[0], y = a[1], z = a[2];\r\n  let w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n  w = w || 1.0;\r\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  let x = a[0], y = a[1], z = a[2];\r\n  out[0] = x * m[0] + y * m[3] + z * m[6];\r\n  out[1] = x * m[1] + y * m[4] + z * m[7];\r\n  out[2] = x * m[2] + y * m[5] + z * m[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a quat\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\r\n\r\n  let x = a[0], y = a[1], z = a[2];\r\n  let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\r\n\r\n  // calculate quat * vec\r\n  let ix = qw * x + qy * z - qz * y;\r\n  let iy = qw * y + qz * x - qx * z;\r\n  let iz = qw * z + qx * y - qy * x;\r\n  let iw = -qx * x - qy * y - qz * z;\r\n\r\n  // calculate result * inverse quat\r\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateX(out, a, b, c){\r\n  let p = [], r=[];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0];\r\n  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\r\n  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateY(out, a, b, c){\r\n  let p = [], r=[];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\r\n  r[1] = p[1];\r\n  r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateZ(out, a, b, c){\r\n  let p = [], r=[];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\r\n  r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\r\n  r[2] = p[2];\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  let tempA = fromValues(a[0], a[1], a[2]);\r\n  let tempB = fromValues(b[0], b[1], b[2]);\r\n\r\n  normalize(tempA, tempA);\r\n  normalize(tempB, tempB);\r\n\r\n  let cosine = dot(tempA, tempB);\r\n\r\n  if(cosine > 1.0) {\r\n    return 0;\r\n  }\r\n  else if(cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  let a0 = a[0], a1 = a[1], a2 = a[2];\r\n  let b0 = b[0], b1 = b[1], b2 = b[2];\r\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\r\nexport const sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\r\nexport const mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\r\nexport const div = divide;\r\n\r\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\r\nexport const dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\r\nexport const sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\r\nexport const len = length;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\r\nexport const sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport const forEach = (function() {\r\n  let vec = create();\r\n\r\n  return function(a, stride, offset, count, fn, arg) {\r\n    let i, l;\r\n    if(!stride) {\r\n      stride = 3;\r\n    }\r\n\r\n    if(!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if(count) {\r\n      l = Math.min((count * stride) + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for(i = offset; i < l; i += stride) {\r\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\r\n    }\r\n\r\n    return a;\r\n  };\r\n})();\r\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE. */\r\n\r\nimport * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function create() {\r\n  let out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function clone(a) {\r\n  let out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function fromValues(x, y, z, w) {\r\n  let out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\r\nexport function set(out, x, y, z, w) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  out[3] = a[3] * b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  out[3] = a[3] / b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  out[3] = Math.ceil(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  out[3] = Math.floor(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  out[3] = Math.min(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  out[3] = Math.max(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  out[3] = Math.round(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + (b[0] * scale);\r\n  out[1] = a[1] + (b[1] * scale);\r\n  out[2] = a[2] + (b[2] * scale);\r\n  out[3] = a[3] + (b[3] * scale);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  let x = b[0] - a[0];\r\n  let y = b[1] - a[1];\r\n  let z = b[2] - a[2];\r\n  let w = b[3] - a[3];\r\n  return Math.sqrt(x*x + y*y + z*z + w*w);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  let x = b[0] - a[0];\r\n  let y = b[1] - a[1];\r\n  let z = b[2] - a[2];\r\n  let w = b[3] - a[3];\r\n  return x*x + y*y + z*z + w*w;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  let x = a[0];\r\n  let y = a[1];\r\n  let z = a[2];\r\n  let w = a[3];\r\n  return Math.sqrt(x*x + y*y + z*z + w*w);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  let x = a[0];\r\n  let y = a[1];\r\n  let z = a[2];\r\n  let w = a[3];\r\n  return x*x + y*y + z*z + w*w;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = -a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  out[3] = 1.0 / a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\r\nexport function normalize(out, a) {\r\n  let x = a[0];\r\n  let y = a[1];\r\n  let z = a[2];\r\n  let w = a[3];\r\n  let len = x*x + y*y + z*z + w*w;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = x * len;\r\n    out[1] = y * len;\r\n    out[2] = z * len;\r\n    out[3] = w * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount between the two inputs\r\n * @returns {vec4} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  let ax = a[0];\r\n  let ay = a[1];\r\n  let az = a[2];\r\n  let aw = a[3];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  out[3] = aw + t * (b[3] - aw);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\r\nexport function random(out, vectorScale) {\r\n  vectorScale = vectorScale || 1.0;\r\n\r\n  //TODO: This is a pretty awful way of doing this. Find something better.\r\n  out[0] = glMatrix.RANDOM();\r\n  out[1] = glMatrix.RANDOM();\r\n  out[2] = glMatrix.RANDOM();\r\n  out[3] = glMatrix.RANDOM();\r\n  normalize(out, out);\r\n  scale(out, out, vectorScale);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  let x = a[0], y = a[1], z = a[2], w = a[3];\r\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  let x = a[0], y = a[1], z = a[2];\r\n  let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\r\n\r\n  // calculate quat * vec\r\n  let ix = qw * x + qy * z - qz * y;\r\n  let iy = qw * y + qz * x - qx * z;\r\n  let iz = qw * z + qx * y - qy * x;\r\n  let iw = -qx * x - qy * y - qz * z;\r\n\r\n  // calculate result * inverse quat\r\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\r\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\r\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\r\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\r\nexport const sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\r\nexport const mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\r\nexport const div = divide;\r\n\r\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\r\nexport const dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\r\nexport const sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\r\nexport const len = length;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\r\nexport const sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport const forEach = (function() {\r\n  let vec = create();\r\n\r\n  return function(a, stride, offset, count, fn, arg) {\r\n    let i, l;\r\n    if(!stride) {\r\n      stride = 4;\r\n    }\r\n\r\n    if(!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if(count) {\r\n      l = Math.min((count * stride) + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for(i = offset; i < l; i += stride) {\r\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\r\n    }\r\n\r\n    return a;\r\n  };\r\n})();\r\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE. */\r\n\r\nimport * as glMatrix from \"./common.js\"\r\nimport * as mat3 from \"./mat3.js\"\r\nimport * as vec3 from \"./vec3.js\"\r\nimport * as vec4 from \"./vec4.js\"\r\n\r\n/**\r\n * Quaternion\r\n * @module quat\r\n */\r\n\r\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\r\nexport function create() {\r\n  let out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\r\nexport function setAxisAngle(out, axis, rad) {\r\n  rad = rad * 0.5;\r\n  let s = Math.sin(rad);\r\n  out[0] = s * axis[0];\r\n  out[1] = s * axis[1];\r\n  out[2] = s * axis[2];\r\n  out[3] = Math.cos(rad);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\r\nexport function getAxisAngle(out_axis, q) {\r\n  let rad = Math.acos(q[3]) * 2.0;\r\n  let s = Math.sin(rad / 2.0);\r\n  if (s != 0.0) {\r\n    out_axis[0] = q[0] / s;\r\n    out_axis[1] = q[1] / s;\r\n    out_axis[2] = q[2] / s;\r\n  } else {\r\n    // If s is zero, return any axis (no rotation - axis does not matter)\r\n    out_axis[0] = 1;\r\n    out_axis[1] = 0;\r\n    out_axis[2] = 0;\r\n  }\r\n  return rad;\r\n}\r\n\r\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\r\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\r\n\r\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\r\n  let bx = Math.sin(rad), bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + aw * bx;\r\n  out[1] = ay * bw + az * bx;\r\n  out[2] = az * bw - ay * bx;\r\n  out[3] = aw * bw - ax * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\r\n  let by = Math.sin(rad), bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw - az * by;\r\n  out[1] = ay * bw + aw * by;\r\n  out[2] = az * bw + ax * by;\r\n  out[3] = aw * bw - ay * by;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\r\n  let bz = Math.sin(rad), bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + ay * bz;\r\n  out[1] = ay * bw - ax * bz;\r\n  out[2] = az * bw + aw * bz;\r\n  out[3] = aw * bw - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\r\nexport function calculateW(out, a) {\r\n  let x = a[0], y = a[1], z = a[2];\r\n\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport function slerp(out, a, b, t) {\r\n  // benchmarks:\r\n  //    http://jsperf.com/quaternion-slerp-implementations\r\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\r\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\r\n\r\n  let omega, cosom, sinom, scale0, scale1;\r\n\r\n  // calc cosine\r\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n  // adjust signs (if necessary)\r\n  if ( cosom < 0.0 ) {\r\n    cosom = -cosom;\r\n    bx = - bx;\r\n    by = - by;\r\n    bz = - bz;\r\n    bw = - bw;\r\n  }\r\n  // calculate coefficients\r\n  if ( (1.0 - cosom) > 0.000001 ) {\r\n    // standard case (slerp)\r\n    omega  = Math.acos(cosom);\r\n    sinom  = Math.sin(omega);\r\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n    scale1 = Math.sin(t * omega) / sinom;\r\n  } else {\r\n    // \"from\" and \"to\" quaternions are very close\r\n    //  ... so we can do a linear interpolation\r\n    scale0 = 1.0 - t;\r\n    scale1 = t;\r\n  }\r\n  // calculate final values\r\n  out[0] = scale0 * ax + scale1 * bx;\r\n  out[1] = scale0 * ay + scale1 * by;\r\n  out[2] = scale0 * az + scale1 * bz;\r\n  out[3] = scale0 * aw + scale1 * bw;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\r\nexport function invert(out, a) {\r\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\r\n  let dot = a0*a0 + a1*a1 + a2*a2 + a3*a3;\r\n  let invDot = dot ? 1.0/dot : 0;\r\n\r\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n  out[0] = -a0*invDot;\r\n  out[1] = -a1*invDot;\r\n  out[2] = -a2*invDot;\r\n  out[3] = a3*invDot;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromMat3(out, m) {\r\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n  // article \"Quaternion Calculus and Fast Animation\".\r\n  let fTrace = m[0] + m[4] + m[8];\r\n  let fRoot;\r\n\r\n  if ( fTrace > 0.0 ) {\r\n    // |w| > 1/2, may as well choose w > 1/2\r\n    fRoot = Math.sqrt(fTrace + 1.0);  // 2w\r\n    out[3] = 0.5 * fRoot;\r\n    fRoot = 0.5/fRoot;  // 1/(4w)\r\n    out[0] = (m[5]-m[7])*fRoot;\r\n    out[1] = (m[6]-m[2])*fRoot;\r\n    out[2] = (m[1]-m[3])*fRoot;\r\n  } else {\r\n    // |w| <= 1/2\r\n    let i = 0;\r\n    if ( m[4] > m[0] )\r\n      i = 1;\r\n    if ( m[8] > m[i*3+i] )\r\n      i = 2;\r\n    let j = (i+1)%3;\r\n    let k = (i+2)%3;\r\n\r\n    fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\r\n    out[i] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot;\r\n    out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\r\n    out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\r\n    out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromEuler(out, x, y, z) {\r\n    let halfToRad = 0.5 * Math.PI / 180.0;\r\n    x *= halfToRad;\r\n    y *= halfToRad;\r\n    z *= halfToRad;\r\n\r\n    let sx = Math.sin(x);\r\n    let cx = Math.cos(x);\r\n    let sy = Math.sin(y);\r\n    let cy = Math.cos(y);\r\n    let sz = Math.sin(z);\r\n    let cz = Math.cos(z);\r\n\r\n    out[0] = sx * cy * cz - cx * sy * sz;\r\n    out[1] = cx * sy * cz + sx * cy * sz;\r\n    out[2] = cx * cy * sz - sx * sy * cz;\r\n    out[3] = cx * cy * cz + sx * sy * sz;\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport const clone = vec4.clone;\r\n\r\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport const fromValues = vec4.fromValues;\r\n\r\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport const copy = vec4.copy;\r\n\r\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport const set = vec4.set;\r\n\r\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport const add = vec4.add;\r\n\r\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\r\nexport const mul = multiply;\r\n\r\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport const scale = vec4.scale;\r\n\r\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport const dot = vec4.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport const lerp = vec4.lerp;\r\n\r\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport const length = vec4.length;\r\n\r\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\r\nexport const len = length;\r\n\r\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport const squaredLength = vec4.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\r\nexport const sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport const normalize = vec4.normalize;\r\n\r\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport const exactEquals = vec4.exactEquals;\r\n\r\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport const equals = vec4.equals;\r\n\r\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\r\nexport const rotationTo = (function() {\r\n  let tmpvec3 = vec3.create();\r\n  let xUnitVec3 = vec3.fromValues(1,0,0);\r\n  let yUnitVec3 = vec3.fromValues(0,1,0);\r\n\r\n  return function(out, a, b) {\r\n    let dot = vec3.dot(a, b);\r\n    if (dot < -0.999999) {\r\n      vec3.cross(tmpvec3, xUnitVec3, a);\r\n      if (vec3.len(tmpvec3) < 0.000001)\r\n        vec3.cross(tmpvec3, yUnitVec3, a);\r\n      vec3.normalize(tmpvec3, tmpvec3);\r\n      setAxisAngle(out, tmpvec3, Math.PI);\r\n      return out;\r\n    } else if (dot > 0.999999) {\r\n      out[0] = 0;\r\n      out[1] = 0;\r\n      out[2] = 0;\r\n      out[3] = 1;\r\n      return out;\r\n    } else {\r\n      vec3.cross(tmpvec3, a, b);\r\n      out[0] = tmpvec3[0];\r\n      out[1] = tmpvec3[1];\r\n      out[2] = tmpvec3[2];\r\n      out[3] = 1 + dot;\r\n      return normalize(out, out);\r\n    }\r\n  };\r\n})();\r\n\r\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount\r\n * @returns {quat} out\r\n */\r\nexport const sqlerp = (function () {\r\n  let temp1 = create();\r\n  let temp2 = create();\r\n\r\n  return function (out, a, b, c, d, t) {\r\n    slerp(temp1, a, d, t);\r\n    slerp(temp2, b, c, t);\r\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\r\n\r\n    return out;\r\n  };\r\n}());\r\n\r\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\r\nexport const setAxes = (function() {\r\n  let matr = mat3.create();\r\n\r\n  return function(out, view, right, up) {\r\n    matr[0] = right[0];\r\n    matr[3] = right[1];\r\n    matr[6] = right[2];\r\n\r\n    matr[1] = up[0];\r\n    matr[4] = up[1];\r\n    matr[7] = up[2];\r\n\r\n    matr[2] = -view[0];\r\n    matr[5] = -view[1];\r\n    matr[8] = -view[2];\r\n\r\n    return normalize(out, fromMat3(out, matr));\r\n  };\r\n})();\r\n","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE. */\r\n\r\nimport * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function create() {\r\n  let out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function clone(a) {\r\n  let out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function fromValues(x, y) {\r\n  let out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\r\nexport function set(out, x, y) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  return out;\r\n};\r\n\r\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  return out;\r\n};\r\n\r\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  return out;\r\n};\r\n\r\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  return out;\r\n};\r\n\r\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\r\nexport function round (out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  return out;\r\n};\r\n\r\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + (b[0] * scale);\r\n  out[1] = a[1] + (b[1] * scale);\r\n  return out;\r\n};\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0],\r\n    y = b[1] - a[1];\r\n  return Math.sqrt(x*x + y*y);\r\n};\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0],\r\n    y = b[1] - a[1];\r\n  return x*x + y*y;\r\n};\r\n\r\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0],\r\n    y = a[1];\r\n  return Math.sqrt(x*x + y*y);\r\n};\r\n\r\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength (a) {\r\n  var x = a[0],\r\n    y = a[1];\r\n  return x*x + y*y;\r\n};\r\n\r\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  return out;\r\n};\r\n\r\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0],\r\n    y = a[1];\r\n  var len = x*x + y*y;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n  }\r\n  return out;\r\n};\r\n\r\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1];\r\n};\r\n\r\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var z = a[0] * b[1] - a[1] * b[0];\r\n  out[0] = out[1] = 0;\r\n  out[2] = z;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount between the two inputs\r\n * @returns {vec2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0],\r\n    ay = a[1];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  return out;\r\n};\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  out[0] = Math.cos(r) * scale;\r\n  out[1] = Math.sin(r) * scale;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2(out, a, m) {\r\n  var x = a[0],\r\n    y = a[1];\r\n  out[0] = m[0] * x + m[2] * y;\r\n  out[1] = m[1] * x + m[3] * y;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2d(out, a, m) {\r\n  var x = a[0],\r\n    y = a[1];\r\n  out[0] = m[0] * x + m[2] * y + m[4];\r\n  out[1] = m[1] * x + m[3] * y + m[5];\r\n  return out;\r\n};\r\n\r\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n    y = a[1];\r\n  out[0] = m[0] * x + m[3] * y + m[6];\r\n  out[1] = m[1] * x + m[4] * y + m[7];\r\n  return out;\r\n};\r\n\r\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  let x = a[0];\r\n  let y = a[1];\r\n  out[0] = m[0] * x + m[4] * y + m[12];\r\n  out[1] = m[1] * x + m[5] * y + m[13];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  let a0 = a[0], a1 = a[1];\r\n  let b0 = b[0], b1 = b[1];\r\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\r\nexport const len = length;\r\n\r\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\r\nexport const sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\r\nexport const mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\r\nexport const div = divide;\r\n\r\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\r\nexport const dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\r\nexport const sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\r\nexport const sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport const forEach = (function() {\r\n  let vec = create();\r\n\r\n  return function(a, stride, offset, count, fn, arg) {\r\n    let i, l;\r\n    if(!stride) {\r\n      stride = 2;\r\n    }\r\n\r\n    if(!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if(count) {\r\n      l = Math.min((count * stride) + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for(i = offset; i < l; i += stride) {\r\n      vec[0] = a[i]; vec[1] = a[i+1];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0]; a[i+1] = vec[1];\r\n    }\r\n\r\n    return a;\r\n  };\r\n})();\r\n","// WebGL 2.0 APIをラッピングするクラス\r\n\r\n\r\nclass GL2 {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n  }\r\n\r\n  // shaderSrcとtypeでWebGLShaderを作り返す\r\n  createShader(shaderSrc, type) {\r\n    // WebGL2RenderingContextコンテキスト\r\n    const gl = this.gl;\r\n    // WebGLShaderの生成\r\n    const shader = gl.createShader(type);\r\n    // WebGLShaderにシェーダーソースコードをセットする\r\n    gl.shaderSource(shader, shaderSrc);\r\n    // シェーダーソースコードをコンパイルする\r\n    gl.compileShader(shader);\r\n    // シェーダーのコンパイルが失敗した場合は例外を送出する\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n      throw new Error(gl.getShaderInfoLog(shader));\r\n    }\r\n    return shader;\r\n  }\r\n\r\n  // フレームバッファをオブジェクトとして生成する関数\r\n  createFrameBuffer(width, height){\r\n    const gl = this.gl;\r\n    // フレームバッファの生成\r\n    const frameBuffer = gl.createFramebuffer();\r\n    \r\n    // フレームバッファをWebGLにバインド\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\r\n    \r\n    // 深度バッファ用レンダーバッファの生成とバインド\r\n    const depthRenderBuffer = gl.createRenderbuffer();\r\n    gl.bindRenderbuffer(gl.RENDERBUFFER, depthRenderBuffer);\r\n    \r\n    // レンダーバッファを深度バッファとして設定\r\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\r\n    \r\n    // フレームバッファにレンダーバッファを関連付ける\r\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthRenderBuffer);\r\n    \r\n    // フレームバッファ用テクスチャの生成\r\n    const fTexture = gl.createTexture();\r\n    \r\n    // フレームバッファ用のテクスチャをバインド\r\n    gl.bindTexture(gl.TEXTURE_2D, fTexture);\r\n    \r\n    // フレームバッファ用のテクスチャにカラー用のメモリ領域を確保\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    \r\n    // テクスチャパラメータ\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    \r\n    // フレームバッファにテクスチャを関連付ける\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, fTexture, 0);\r\n    \r\n    // 各種オブジェクトのバインドを解除\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    \r\n    // オブジェクトを返して終了\r\n    return {frameBuffer : frameBuffer, depthBuffer : depthRenderBuffer, texture : fTexture};\r\n  }\r\n\r\n  // 2つのWebGLShader（頂点シェーダ・フラグメントシェーダ）\r\n  // からWebGLProgramを作り返す\r\n  createProgram(vs, fs) {\r\n\r\n    // WebGL2RenderingContextコンテキスト\r\n    const gl = this.gl;\r\n\r\n    if(typeof vs == 'string'){\r\n      vs = this.createShader(vs,gl.VERTEX_SHADER);\r\n    }\r\n\r\n    if(typeof fs == 'string'){\r\n      fs = this.createShader(fs,gl.FRAGMENT_SHADER);\r\n    }\r\n\r\n    // WebGLProgramの作成\r\n    const program = gl.createProgram();\r\n    // 頂点シェーダをアタッチする\r\n    gl.attachShader(program, vs);\r\n    // フラグメントシェーダをアタッチする\r\n    gl.attachShader(program, fs);\r\n    // シェーダーをリンクする\r\n    gl.linkProgram(program);\r\n    // リンクが失敗したら例外を送出する\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n      throw new Error(gl.getProgramInfoLog(program));\r\n    }\r\n    return program;\r\n  }\r\n\r\n  loadImage(url) {\r\n    return new Promise((resolve,reject)=>{\r\n      var image = new Image();\r\n      try {\r\n        image.src = url;\r\n        image.onload = ()=>{\r\n          resolve(image);\r\n        };\r\n      } catch (e){\r\n        reject(e);\r\n      }\r\n     });\r\n  }\r\n\r\n  createTexture(url){\r\n\r\n  }\r\n}\r\n\r\nexport default GL2;\r\n","'use strict';\r\n\r\nconst crtVShader =\r\n  `#version 300 es\r\n precision mediump float;\r\n in vec2 position;\r\n in vec2 texcoord;\r\n \r\n out vec2 o_texcoord;\r\n\r\n\r\nvoid main()\t{\r\n    o_texcoord = texcoord;\r\n    gl_Position = vec4(position,0.0,1.0);   \r\n  }\r\n`;\r\n\r\nconst crtFShader =\r\n  `#version 300 es\r\nprecision mediump float;\r\n\r\nuniform sampler2D map;\r\nuniform vec2 resolution;\r\nuniform float time;\r\n\r\nin vec2 o_texcoord;\r\nout vec4 out_color;\r\n\r\n#define RGBA(r, g, b, a)\tvec4(float(r)/255.0, float(g)/255.0, float(b)/255.0, float(a)/255.0)\r\n\r\nconst vec3 kBackgroundColor = RGBA(0x00, 0x00, 0x00, 0x00).rgb; // medium-blue sky\r\n//const vec3 kBackgroundColor = RGBA(0xff, 0x00, 0xff, 0xff).rgb; // test magenta\r\n\r\n// Emulated input resolution.\r\n// Fix resolution to set amount.\r\n// Note: 256x224 is the most common resolution of the SNES, and that of Super Mario World.\r\nvec2 res = vec2(\r\n  240.0 / 1.0,\r\n  320.0 / 1.0\r\n);\r\n\r\n// Hardness of scanline.\r\n//\t-8.0 = soft\r\n// -16.0 = medium\r\nfloat sHardScan = -8.0;\r\n\r\n// Hardness of pixels in scanline.\r\n// -2.0 = soft\r\n// -4.0 = hard\r\nconst float kHardPix = -3.0;\r\n\r\n// Display warp.\r\n// 0.0 = none\r\n// 1.0 / 8.0 = extreme\r\nconst vec2 kWarp = vec2(1.0 / 32.0, 1.0 / 24.0);\r\n//const vec2 kWarp = vec2(0);\r\n\r\n// Amount of shadow mask.\r\nfloat kMaskDark = 0.5;\r\nfloat kMaskLight = 1.5;\r\n\r\n//------------------------------------------------------------------------\r\n\r\n// sRGB to Linear.\r\n// Assuing using sRGB typed textures this should not be needed.\r\nfloat toLinear1(float c) {\r\n\treturn (c <= 0.04045) ?\r\n\t\t(c / 12.92) :\r\n\t\tpow((c + 0.055) / 1.055, 2.4);\r\n}\r\nvec3 toLinear(vec3 c) {\r\n\treturn vec3(toLinear1(c.r), toLinear1(c.g), toLinear1(c.b));\r\n}\r\n\r\n// Linear to sRGB.\r\n// Assuing using sRGB typed textures this should not be needed.\r\nfloat toSrgb1(float c) {\r\n\treturn(c < 0.0031308 ?\r\n\t\t(c * 12.92) :\r\n\t\t(1.055 * pow(c, 0.41666) - 0.055));\r\n}\r\nvec3 toSrgb(vec3 c) {\r\n\treturn vec3(toSrgb1(c.r), toSrgb1(c.g), toSrgb1(c.b));\r\n}\r\n\r\n// Nearest emulated sample given floating point position and texel offset.\r\n// Also zero's off screen.\r\nvec4 fetch(vec2 pos, vec2 off)\r\n{\r\n\tpos = floor(pos * resolution + off) / resolution;\r\n\tif (max(abs(pos.x - 0.5), abs(pos.y - 0.5)) > 0.5)\r\n\t\treturn vec4(vec3(0.0), 0.0);\r\n   \t\r\n//    vec4 sampledColor = texture(iChannel0, pos.xy, -16.0);\r\n    vec4 sampledColor = texture(map, pos.xy, -16.0);\r\n    \r\n    sampledColor = vec4(\r\n        (sampledColor.rgb * sampledColor.a) +\r\n        \t(kBackgroundColor * (1.0 - sampledColor.a)),\r\n        1.0\r\n    );\r\n    \r\n\treturn vec4(\r\n        toLinear(sampledColor.rgb),\r\n        sampledColor.a\r\n    );\r\n}\r\n\r\n// Distance in emulated pixels to nearest texel.\r\nvec2 dist(vec2 pos) {\r\n\tpos = pos * res;\r\n\treturn -((pos - floor(pos)) - vec2(0.5));\r\n}\r\n\r\n// 1D Gaussian.\r\nfloat gaus(float pos, float scale) {\r\n\treturn exp2(scale * pos * pos);\r\n}\r\n\r\n// 3-tap Gaussian filter along horz line.\r\nvec3 horz3(vec2 pos, float off)\r\n{\r\n\tvec3 b = fetch(pos, vec2(-1.0, off)).rgb;\r\n\tvec3 c = fetch(pos, vec2( 0.0, off)).rgb;\r\n\tvec3 d = fetch(pos, vec2(+1.0, off)).rgb;\r\n\tfloat dst = dist(pos).x;\r\n\t// Convert distance to weight.\r\n\tfloat scale = kHardPix;\r\n\tfloat wb = gaus(dst - 1.0, scale);\r\n\tfloat wc = gaus(dst + 0.0, scale);\r\n\tfloat wd = gaus(dst + 1.0, scale);\r\n\t// Return filtered sample.\r\n\treturn (b * wb + c * wc + d * wd) / (wb + wc + wd);\r\n}\r\n\r\n// 5-tap Gaussian filter along horz line.\r\nvec3 horz5(vec2 pos, float off)\r\n{\r\n\tvec3 a = fetch(pos, vec2(-2.0, off)).rgb;\r\n\tvec3 b = fetch(pos, vec2(-1.0, off)).rgb;\r\n\tvec3 c = fetch(pos, vec2( 0.0, off)).rgb;\r\n\tvec3 d = fetch(pos, vec2(+1.0, off)).rgb;\r\n\tvec3 e = fetch(pos, vec2(+2.0, off)).rgb;\r\n\tfloat dst = dist(pos).x;\r\n\t// Convert distance to weight.\r\n\tfloat scale = kHardPix;\r\n\tfloat wa = gaus(dst - 2.0, scale);\r\n\tfloat wb = gaus(dst - 1.0, scale);\r\n\tfloat wc = gaus(dst + 0.0, scale);\r\n\tfloat wd = gaus(dst + 1.0, scale);\r\n\tfloat we = gaus(dst + 2.0, scale);\r\n\t// Return filtered sample.\r\n\treturn (a * wa + b * wb + c * wc + d * wd + e * we) / (wa + wb + wc + wd + we);\r\n}\r\n\r\n// Return scanline weight.\r\nfloat scan(vec2 pos, float off) {\r\n\tfloat dst = dist(pos).y;\r\n\treturn gaus(dst + off, sHardScan);\r\n}\r\n\r\n// Allow nearest three lines to effect pixel.\r\nvec3 tri(vec2 pos)\r\n{\r\n\tvec3 a = horz3(pos, -1.0);\r\n\tvec3 b = horz5(pos,  0.0);\r\n\tvec3 c = horz3(pos, +1.0);\r\n\tfloat wa = scan(pos, -1.0);\r\n\tfloat wb = scan(pos,  0.0);\r\n\tfloat wc = scan(pos, +1.0);\r\n\treturn a * wa + b * wb + c * wc;\r\n}\r\n\r\n// Distortion of scanlines, and end of screen alpha.\r\nvec2 warp(vec2 pos)\r\n{\r\n\tpos = pos * 2.0 - 1.0;\r\n\tpos *= vec2(\r\n\t\t1.0 + (pos.y * pos.y) * kWarp.x,\r\n\t\t1.0 + (pos.x * pos.x) * kWarp.y\r\n\t);\r\n\treturn pos * 0.5 + 0.5;\r\n}\r\n\r\n// Shadow mask.\r\nvec3 mask(vec2 pos)\r\n{\r\n\tpos.x += pos.y * 3.0;\r\n\tvec3 mask = vec3(kMaskDark, kMaskDark, kMaskDark);\r\n\tpos.x = fract(pos.x / 6.0);\r\n\tif (pos.x < 0.333)\r\n\t\tmask.r = kMaskLight;\r\n\telse if (pos.x < 0.666)\r\n\t\tmask.g = kMaskLight;\r\n\telse\r\n\t\tmask.b = kMaskLight;\r\n\treturn mask;\r\n}\r\n\r\n// Draw dividing bars.\r\nfloat bar(float pos, float bar) {\r\n\tpos -= bar;\r\n\treturn (pos * pos < 4.0) ? 0.0 : 1.0;\r\n}\r\n\r\nfloat rand(vec2 co) {\r\n\treturn fract(sin(dot(co.xy , vec2(12.9898, 78.233))) * 43758.5453);\r\n}\r\n\r\n// Entry.\r\nvoid main()\r\n{\r\n//    vec2 pos = warp(gl_FragCoord.xy / resolution.xy);\r\n//    vec2 pos = gl_FragCoord.xy / resolution.xy;\r\n    vec2 pos = o_texcoord;// resolution.xy;\r\n    \r\n\t  // Unmodified.\r\n     vec3 c = tri(pos) * mask(gl_FragCoord.xy);\r\n     out_color = vec4(\r\n        toSrgb(vec3(c)),\r\n        1.0\r\n     );\r\n    out_color = vec4(texture(map,o_texcoord).rgb,1.0);\r\n   //out_color = vec4(1.0,0.0,0.0,1.0);\r\n}\r\n`;\r\n\r\nexport default class Screen {\r\nconstructor(con,texture) {\r\n\r\n  const w = con.CONSOLE_WIDTH / window.innerWidth;\r\n  const h = con.CONSOLE_HEIGHT / window.innerHeight;\r\n\r\n  this.console = con;\r\n  const gl = this.console.gl;\r\n  const gl2 = this.console.gl2;\r\n\r\n  const program = this.program = gl2.createProgram(crtVShader,crtFShader);\r\n  \r\n  this.positionLocation = gl.getAttribLocation(program,'position');\r\n  this.texcoordLocation = gl.getAttribLocation(program,'texcoord');\r\n\r\n  // VAOのセットアップ\r\n  this.vao = gl.createVertexArray();\r\n  gl.bindVertexArray(this.vao);\r\n\r\n  // Text用ジオメトリのセットアップ //\r\n  // インターリーブ形式\r\n  \r\n  this.bufferData = new Float32Array([\r\n    -w, h,0,0,\r\n    w, h,1,0,\r\n    -w, -h,0,1,\r\n    w, -h,1,1\r\n  ]);\r\n\r\n  this.buffer = gl.createBuffer();\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\r\n  gl.bufferData(gl.ARRAY_BUFFER, this.bufferData, gl.STATIC_DRAW);\r\n\r\n  const positionSize = this.positionSize = 2;\r\n  const texcoordSize = this.texcoordSize = 2;\r\n  const stride = this.stride = this.bufferData.BYTES_PER_ELEMENT * (positionSize + texcoordSize);\r\n  const positionOffset = this.positionOffset = 0;\r\n  const texcoordOffset = this.texcoordOffset = positionSize * this.bufferData.BYTES_PER_ELEMENT;\r\n\r\n  gl.enableVertexAttribArray(this.positionLocation);\r\n  gl.vertexAttribPointer(this.positionLocation, positionSize, gl.FLOAT, true, stride, positionOffset);\r\n\r\n  gl.enableVertexAttribArray(this.texcoordLocation);\r\n  gl.vertexAttribPointer(this.texcoordLocation, texcoordSize, gl.FLOAT, true, stride, texcoordOffset);\r\n\r\n  this.ibo = gl.createBuffer();\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.ibo);\r\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0, 2, 1, 2, 3, 1]), gl.STATIC_DRAW);\r\n\r\n  gl.bindVertexArray(null);  \r\n\r\n  // Uniform変数\r\n\r\n  this.mapLocation = gl.getUniformLocation(program,'map');\r\n  this.resolutionLocation = gl.getUniformLocation(program,'resolution');\r\n  this.timeLocation = gl.getUniformLocation(program,'time');\r\n  this.texture = texture;\r\n  this.resolution = [this.console.CONSOLE_WIDTH, this.console.CONSOLE_HEIGHT];\r\n\r\n  this.console.on('resize', this.resize.bind(this));\r\n}\r\n\r\nrender() {\r\n  const gl = this.console.gl;\r\n  gl.enable(gl.DEPTH_TEST);\r\n  //gl.enable(gl.CULL_FACE);\r\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n  gl.useProgram(this.program);\r\n  gl.bindVertexArray(this.vao);\r\n//  twgl.setBuffersAndAttributes(gl, this.programInfo, this.bufferInfo);\r\n\r\n  gl.activeTexture(gl.TEXTURE0);\r\n  gl.bindTexture(gl.TEXTURE_2D,this.texture);\r\n  gl.uniform1i(this.mapLocation,0);\r\n\r\n  gl.uniform1f(this.timeLocation,0);\r\n  gl.uniform2fv(this.resolutionLocation,this.resolution);\r\n\r\n  //twgl.setUniforms(this.programInfo, this.uniforms);\r\n  gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\r\n}\r\n\r\nresize() {\r\n  const con = this.console;\r\n  const w = con.CONSOLE_WIDTH / window.innerWidth;\r\n  const h = con.CONSOLE_HEIGHT / window.innerHeight;\r\n  const gl = this.console.gl;\r\n\r\n  this.bufferData = new Float32Array([\r\n    -w, h,0,0,\r\n    w, h,1,0,\r\n    -w, -h,0,1,\r\n    w, -h,1,1\r\n  ]);\r\n\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\r\n  gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.bufferData);\r\n  gl.bindBuffer(gl.ARRAY_BUFFER,null);\r\n\r\n  this.resolution[0] = this.console.CONSOLE_WIDTH;\r\n  this.resolution[1] = this.console.CONSOLE_HEIGHT;\r\n\r\n}\r\n\r\n}\r\n\r\n","'use strict';\r\n\r\n//import * as twgl from '../../twgl/twgl-full.js';\r\nimport  { mat4, vec3} from './gl-matrix/gl-matrix.js';\r\n//const m4 = twgl.m4;\r\n\r\nexport class TRS {\r\n  constructor() {\r\n    this.translation = vec3.create();\r\n    this.rotation = vec3.create();\r\n    this.scale = vec3.fromValues(1, 1, 1);\r\n  }\r\n\r\n  getMatrix(dst) {\r\n    dst = dst || mat4.create();\r\n    const t = this.translation;\r\n    const r = this.rotation;\r\n    const s = this.scale;\r\n\r\n    // compute a matrix from translation, rotation, and scale\r\n    mat4.fromTranslation(dst,t);\r\n    mat4.scale(dst, dst,s);\r\n    mat4.rotateX(dst,dst, r[0]);\r\n    mat4.rotateY(dst,dst, r[1]);\r\n    mat4.rotateZ(dst,dst, r[2]);\r\n\r\n    return dst;\r\n  }\r\n}\r\n\r\nexport class Node {\r\n  constructor(source = new TRS()) {\r\n    this.children = [];\r\n    this.localMatrix = mat4.identity(mat4.create());\r\n    this.worldMatrix = mat4.identity(mat4.create());\r\n    this.source = source;\r\n  }\r\n\r\n  setParent(parent) {\r\n    // remove us from our parent\r\n    if (this.parent) {\r\n      const ndx = this.parent.children.indexOf(this);\r\n      if (ndx >= 0) {\r\n        this.parent.children.splice(ndx, 1);\r\n      }\r\n    }\r\n\r\n    // Add us to our new parent\r\n    if (parent) {\r\n      parent.children.push(this);\r\n    }\r\n    this.parent = parent;\r\n  }\r\n\r\n  updateWorldMatrix(matrix) {\r\n    const source = this.source;\r\n    if (source) {\r\n      source.getMatrix(this.localMatrix);\r\n    }\r\n\r\n    if (matrix) {\r\n      // a matrix was passed in so do the math\r\n      mat4.multiply(this.worldMatrix,matrix, this.localMatrix );\r\n    } else {\r\n      // no matrix was passed in so just copy.\r\n      mat4.copy(this.worldMatrix,this.localMatrix);\r\n    }\r\n\r\n    // now process all the children\r\n    const worldMatrix = this.worldMatrix;\r\n    this.children.forEach(function (child) {\r\n      child.updateWorldMatrix(worldMatrix);\r\n    });\r\n  }\r\n}\r\n\r\n\r\n","'use strict';\r\n\r\nimport { Node } from './scene.js';\r\nimport { mat4, vec3, vec4 } from './gl-matrix/gl-matrix.js';\r\n\r\nconst vs =\r\n  `#version 300 es\r\nprecision mediump float;\r\nuniform mat4 u_worldViewProjection;\r\nuniform vec3 u_lightWorldPos;\r\nuniform mat4 u_world;\r\nuniform mat4 u_viewInverse;\r\n//uniform mat4 u_worldInverseTranspose;\r\n\r\nin vec3 position;\r\n//in vec3 normal;\r\nin vec2 texcoord;\r\n\r\nout vec4 v_position;\r\nout vec2 v_texCoord;\r\n//flat out vec3 v_normal;\r\nout vec3 v_surfaceToLight;\r\nout vec3 v_surfaceToView;\r\n\r\nvoid main() {\r\n  v_texCoord = texcoord;\r\n  vec4 pos = vec4(position,1.0);\r\n  v_position = u_worldViewProjection * pos;\r\n  v_surfaceToLight = u_lightWorldPos - (u_world * pos).xyz;\r\n  v_surfaceToView = (u_viewInverse[3] - (u_world * pos)).xyz;\r\n  gl_Position = v_position;\r\n}\r\n`;\r\n\r\nconst fs =\r\n  `#version 300 es\r\nprecision mediump float;\r\n\r\nin vec4 v_position;\r\nin vec2 v_texCoord;\r\n//flat in vec3 v_normal;\r\nin vec3 v_surfaceToLight;\r\nin vec3 v_surfaceToView;\r\n\r\n//uniform vec4 u_color;\r\nuniform vec4 u_lightColor;\r\nuniform vec4 u_ambient;\r\nuniform vec4 u_diffuse;\r\nuniform vec4 u_specular;\r\nuniform float u_shininess;\r\nuniform float u_specularFactor;\r\n\r\nout vec4 out_color;\r\n\r\nvec4 lit(float l ,float h, float m) {\r\n  return vec4(1.0,\r\n              max(l, 0.0),\r\n              (l > 0.0) ? pow(max(0.0, h), m) : 0.0,\r\n              1.0);\r\n}\r\n\r\nvoid main() {\r\n  vec4 diffuseColor = u_diffuse;//texture(u_diffuse, v_texCoord);\r\n  vec3 dx = dFdx(v_position.xyz);\r\n  vec3 dy = dFdy(v_position.xyz);\r\n  vec3 a_normal = normalize(cross(normalize(dx), normalize(dy)));\r\n  //vec3 a_normal = normalize(v_normal);\r\n  vec3 surfaceToLight = normalize(v_surfaceToLight);\r\n  vec3 surfaceToView = normalize(v_surfaceToView);\r\n  vec3 halfVector = normalize(surfaceToLight + surfaceToView);\r\n  vec4 litR = lit(dot(a_normal, surfaceToLight),\r\n                    dot(a_normal, halfVector), u_shininess);\r\n  vec4 outColor = vec4((\r\n  u_lightColor * (diffuseColor * litR.y + diffuseColor * u_ambient +\r\n                u_specular * litR.z * u_specularFactor) /* * u_color*/).rgb,\r\n      diffuseColor.a);\r\n  out_color = outColor;\r\n}\r\n`;\r\n\r\nexport class Program {\r\n  constructor(gl2, vs, fs) {\r\n    this.program = gl2.createProgram(vs, fs);\r\n  }\r\n}\r\n\r\nexport class Model {\r\n  constructor(con, data, program) {\r\n    const gl = this.gl = con.gl;\r\n    this.program = program || con.vscreen.program;\r\n\r\n    this.drawInfos = data.drawInfos;\r\n    const bufferData = new Float32Array(data.data);\r\n\r\n    // VAOのセットアップ\r\n    this.vao = gl.createVertexArray();\r\n    gl.bindVertexArray(this.vao);\r\n\r\n    this.buffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, bufferData, gl.STATIC_DRAW);\r\n\r\n    gl.useProgram(this.program);\r\n\r\n    this.positionLocation = gl.getAttribLocation(this.program, 'position');\r\n    this.texcoordLocation = gl.getAttribLocation(this.program, 'texcoord');\r\n\r\n    gl.enableVertexAttribArray(this.positionLocation);\r\n    gl.vertexAttribPointer(this.positionLocation, data.position_size, gl.FLOAT, true, data.stride, 0);\r\n\r\n    gl.enableVertexAttribArray(this.texcoordLocation);\r\n    gl.vertexAttribPointer(this.texcoordLocation, data.texcoord_size, gl.FLOAT, true, data.stride, data.position_size * bufferData.BYTES_PER_ELEMENT);\r\n\r\n    this.ibo = gl.createBuffer();\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.ibo);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(data.indices), gl.STATIC_DRAW);\r\n\r\n    gl.bindVertexArray(null);\r\n\r\n    // Uniform \r\n\r\n    this.worldViewProjectionLoc = gl.getUniformLocation(this.program, 'u_worldViewProjection');\r\n    this.lightWorldPosLoc = gl.getUniformLocation(this.program, 'u_lightWorldPos');\r\n    this.worldLoc = gl.getUniformLocation(this.program, 'u_world');\r\n    this.viewInverseLoc = gl.getUniformLocation(this.program, 'u_viewInverse');\r\n    //this.worldInvTransLoc = gl.getUniformLocation(this.program, 'u_worldInverseTranspose');\r\n\r\n    this.lightColorLoc = gl.getUniformLocation(this.program, 'u_lightColor');\r\n    this.ambientLoc = gl.getUniformLocation(this.program, 'u_ambient');\r\n    this.diffuseLoc = gl.getUniformLocation(this.program, 'u_diffuse');\r\n    this.specularLoc = gl.getUniformLocation(this.program, 'u_specular');\r\n    this.shininessLoc = gl.getUniformLocation(this.program, 'u_shininess');\r\n    this.specularFactorLoc = gl.getUniformLocation(this.program, 'u_specularFactor');\r\n\r\n  }\r\n\r\n  render(screen, uniforms) {\r\n    const gl = this.gl;\r\n    const sUniforms = screen.uniforms;\r\n\r\n    gl.useProgram(this.program);\r\n\r\n    gl.uniformMatrix4fv(this.worldViewProjectionLoc,false, uniforms.u_worldViewProjection);\r\n    gl.uniform3fv(this.lightWorldPosLoc, sUniforms.u_lightWorldPos);\r\n    gl.uniformMatrix4fv(this.worldLoc,false, uniforms.u_world);\r\n    gl.uniformMatrix4fv(this.viewInverseLoc, false,sUniforms.u_viewInverse);\r\n    //gl.uniformMatrix4fv(this.worldInvTransLoc, false,uniforms.u_worldInverseTranspose);\r\n\r\n    gl.uniform4fv(this.lightColorLoc, sUniforms.u_lightColor);\r\n    gl.uniform4fv(this.ambientLoc, sUniforms.u_ambient);\r\n\r\n    gl.bindVertexArray(this.vao);\r\n\r\n    this.drawInfos.forEach(d => {\r\n      gl.uniform4fv(this.diffuseLoc, d.material.u_diffuse);\r\n      gl.uniform4fv(this.specularLoc, d.material.u_specular);\r\n      gl.uniform1f(this.shininessLoc, d.material.u_shininess);\r\n      gl.uniform1f(this.specularFactorLoc, d.material.u_specularFactor);\r\n\r\n      gl.drawElements(gl.TRIANGLES, d.count, gl.UNSIGNED_SHORT, d.offset);\r\n\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport class SceneNode extends Node {\r\n  constructor(model, visible = true) {\r\n    super();\r\n    this.model = model;\r\n    this.visible = visible;\r\n    this.uniforms = {};\r\n  }\r\n\r\n  render(screen) {\r\n    if (!this.visible) return;\r\n\r\n    const u_worldInverseTranspose = mat4.create();\r\n    mat4.invert(u_worldInverseTranspose, this.worldMatrix);\r\n    mat4.transpose(u_worldInverseTranspose, u_worldInverseTranspose);\r\n\r\n    this.uniforms = {\r\n      u_world: this.worldMatrix,\r\n      u_worldViewProjection: mat4.multiply(mat4.create(), screen.uniforms.viewProjection, this.worldMatrix)\r\n    };\r\n\r\n    this.model.render(screen, this.uniforms);\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default class VScreen {\r\n  constructor(con) {\r\n    this.console = con;\r\n    this.gl = con.gl;\r\n    const gl2 = this.gl2 = con.gl2;\r\n    this.y = 0;\r\n\r\n    this.scene = new Node();\r\n    this.program = gl2.createProgram(vs, fs);\r\n    this.sceneNodes = [];\r\n\r\n    this.uniforms = {\r\n      u_lightWorldPos: vec3.fromValues(1, 108, 1000),\r\n      u_lightColor: vec4.fromValues(1.0, 1.0, 1.0, 1),\r\n      u_ambient: vec4.fromValues(0.2, 0.2, 0.2, 1.0)\r\n    };\r\n\r\n    const fov = this.console.ANGLE_OF_VIEW * Math.PI / 180;\r\n    //const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\r\n    const aspect = con.VIRTUAL_WIDTH / con.VIRTUAL_HEIGHT;\r\n    const zNear = 0.01;\r\n    const zFar = 100000;\r\n    const projection = mat4.perspective(mat4.create(), fov, aspect, zNear, zFar);\r\n    const eye = vec3.fromValues(0, 0, this.console.CAMERA_Z);\r\n    const target = vec3.create();\r\n    const up = vec3.fromValues(0, 1, 0);\r\n\r\n    const view = mat4.lookAt(mat4.create(), eye, target, up);\r\n    const camera = mat4.invert(mat4.create(), view);\r\n    this.uniforms.viewProjection = mat4.multiply(mat4.create(), projection, view);\r\n\r\n    this.uniforms.u_viewInverse = camera;\r\n\r\n  }\r\n\r\n  appendScene(sceneNode, parent = this.scene) {\r\n    if (!(sceneNode instanceof Node)) throw new TypeError('');\r\n    sceneNode.setParent(parent);\r\n    this.sceneNodes.push(sceneNode);\r\n  }\r\n\r\n  removeScene(sceneNode) {\r\n    {\r\n      const ndx = sceneNode.parent.children.indexOf(sceneNode);\r\n      if (ndx >= 0) {\r\n        sceneNode.parent.children.splice(ndx, 1);\r\n      }\r\n    }\r\n    {\r\n      const ndx = this.sceneNodes.indexOf(sceneNode);\r\n      if (ndx >= 0) {\r\n        this.sceneNodes.splice(ndx, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    this.y += 0.006;\r\n\r\n    this.scene.updateWorldMatrix();\r\n\r\n    this.sceneNodes.forEach(n => {\r\n      if (n.visible) {\r\n        n.render(this);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n","'use strict';\r\n\r\n// ビットのMSBとLSBを入れ替えるメソッド\r\nfunction rev(x) {\r\n  x = x & 0xff;\r\n  // 0bitと1bit、2bitと3bit、4bitと5bit、6bitと7ビットの反転\r\n  x = ((x & 0x55) << 1) | ((x >>> 1) & 0x55);\r\n  // 0-1bitと2-3bit、4-5bitと6-7bitの反転\r\n  x = ((x & 0x33) << 2) | ((x >>> 2) & 0x33);\r\n  // 0-3bit、4-7bitの反転\r\n  x = ((x & 0x0F) << 4) | ((x >>> 4) & 0x0F);\r\n  return x;\r\n}\r\n\r\nconst vs =\r\n  `#version 300 es\r\nprecision highp int;\r\nprecision highp float;\r\n\r\n\r\nin vec2 position;\r\nin vec2 texcoord;\r\nout vec2 vtexcoord;\r\n\r\nvoid main()\t{\r\n  gl_Position = vec4( position, 0.0,1.0 );\r\n  vtexcoord = texcoord;\r\n}\r\n`;\r\n\r\nconst fs =\r\n  `#version 300 es\r\nprecision highp int;\r\nprecision highp float;\r\nprecision highp usampler2D;\r\n\r\nuniform bool blink;\r\nuniform usampler2D textBuffer;\r\nuniform usampler2D font;\r\nuniform usampler2D pallet;\r\nuniform float vwidth;\r\nuniform float vheight;\r\n\r\nin vec2 vtexcoord;\r\nout vec4 out_color;\r\n\r\n// 文字表示\r\nvec4 textPlane(void){\r\n  // キャラクタコードを読み出し\r\n  ivec2 bpos = ivec2(gl_FragCoord.xy);//ivec2(int(vtexcoord.x * vwidth),int(vtexcoord.y * vheight));\r\n  ivec2 cpos = ivec2(bpos.x >> 3,bpos.y >> 3);\r\n\r\n  uint data = texelFetch(textBuffer,cpos,0).r;\r\n  // char codeの内容\r\n  // blink col bg-col alpha code point\r\n  // bccc 0bbb aaaa aaaa pppp pppp pppp pppp  \r\n  uint cc = data & 0xffffu;\r\n  uint attr = data & 0xffff0000u;\r\n\r\n  // 表示対象の文字のビット位置を求める\r\n  uint x = 0x80u >> uint( bpos.x & 7);\r\n\r\n  // 表示対象の文字のY位置を求める\r\n  int y = bpos.y & 7;\r\n  \r\n  // 文字色\r\n  // uint ccolor = (attr & 0x70u) >> 4u;\r\n  uint ccolor = texelFetch(pallet,ivec2(int((attr & 0x70000000u) >> 28u),0),0).r;\r\n  //uint ccolor = 0x7u;\r\n \r\n  float ccg = float((ccolor & 0x4u) >> 2u) ;// bit 6\r\n  float ccr = float((ccolor & 0x2u) >> 1u);// bit 5\r\n  float ccb = float((ccolor & 0x1u));// bit 4\r\n\r\n  // ブリンク\r\n  bool attr_blink = (attr & 0x80000000u) > 0u;// bit 3\r\n  \r\n  // 背景色\r\n  uint bgcolor = texelFetch(pallet,ivec2(int((attr & 0x7000000u) >> 24u),0),0).r;\r\n\r\n  float bgg = float((bgcolor & 0x4u) >> 2u);// bit 6\r\n  float bgr = float((bgcolor & 0x2u) >> 1u);// bit 5\r\n  float bgb = float((bgcolor & 0x1u));// bit 4\r\n\r\n  // フォント読み出し位置\r\n  ivec2 fontpos = ivec2(int(cc & 0xffu),y + int((cc & 0xff00u) >> 5u));\r\n  //vec2 fontpos = vec2(float(cc & 0xffu) / 256.0,float(y + int((cc >> 8u) & 0xffu)) / 2048.0);\r\n\r\n  // フォントデータの読み出し\r\n  uint pixByte = texelFetch(font,fontpos,0).r;\r\n  //uint pixByte = texture(font,fontpos).r & 0xffu;\r\n  \r\n  // 指定位置のビットが立っているかチェック\r\n  bool pixBit = (pixByte & x) != 0u;\r\n\r\n  // blinkの処理\r\n  if(attr_blink && blink) return vec4(0.0);\r\n\r\n  if(pixBit){\r\n    // ビットが立っているときは、文字色を設定\r\n    float alpha = float((attr & 0xff0000u) >> 16u) / 255.0;\r\n    return vec4(ccr,ccg,ccb,alpha);\r\n  }\r\n\r\n  // ビットが立っていないときは背景色を設定\r\n  float alpha = (bgg + bgr + bgb) == 0.0 ? 0.0 : float((attr & 0xff0000u) >> 16u) / 255.0;\r\n  if(alpha == 0.0) discard;\r\n  return vec4(bgr,bgg,bgb,alpha);\r\n  return vec4(0.0);\r\n}\r\n\r\nvoid main(){\r\n  out_color = textPlane();\r\n}\r\n \r\n`;\r\n\r\n/// テキストプレーン\r\nexport default class TextPlane {\r\n  constructor({gl2, vwidth = 320, vheight = 200,textBitmap,memory,offset}) {\r\n\r\n    this.gl2 = gl2;\r\n    const gl = this.gl = gl2.gl;\r\n\r\n\r\n    this.vwidth = vwidth;\r\n    this.vheight = vheight;\r\n\r\n    this.twidth = parseInt(vwidth / this.charSize);// テキストの横の文字数\r\n    this.theight = parseInt(vheight / this.charSize);// テキストの縦の文字数\r\n\r\n    this.blinkCount = 0;// ブリンク制御用\r\n    this.blink = false;// ブリンク制御用\r\n\r\n    this.textBuffer = new Uint32Array(memory,offset,parseInt(this.twidth * this.theight));// テキスト/アトリビュートVRAM\r\n    // テスト用\r\n    // const s = '０１２３４５６７８９０美咲フォントで表示してみた！ABCDEFGHIJKLMNOPQRSTUVWXYZ!ＡＢＣＤＥＦ漢字もそれなりに表示できる.';\r\n    // let si = 0;\r\n\r\n    // for(let i = 0,e =this.textBuffer.length;i < e;++i){\r\n    //   const c = ((i & 7) << 28) + ((7 - (i & 7)) << 24) /*+ (((i + (i / this.twidth)) & 1) << 31)*/ + (((i + 0x50) & 0xff ) << 16) ;\r\n    //   this.textBuffer[i] = s.codePointAt(si++) | c;\r\n    //   if(si >= s.length){\r\n    //     si = 0;\r\n    //   }\r\n    // }\r\n\r\n    class TextTexture {\r\n      constructor({ location, unitNo = 0, cpubuffer, width, height, internalFormat = gl.R8UI, format = gl.RED_INTEGER, type = gl.UNSIGNED_BYTE, sampler = null }) {\r\n        this.location = location;\r\n        this.unitNo = unitNo;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.cpubuffer = cpubuffer;\r\n        this.texture = gl.createTexture();\r\n        this.internalFormat = internalFormat;\r\n        this.format = format;\r\n        this.type = type;\r\n        this.sampler = sampler || (() => {\r\n          const s = gl.createSampler();\r\n          gl.samplerParameteri(s, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n          gl.samplerParameteri(s, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n          return s;\r\n        })();\r\n\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, width, height, 0, format, type, cpubuffer);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n      }\r\n\r\n      bind() {\r\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n      }\r\n\r\n      unbind() {\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n      }\r\n\r\n      update() {\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.width, this.height, this.format, this.type, this.cpubuffer, 0);\r\n      }\r\n\r\n      activate() {\r\n        gl.activeTexture(gl.TEXTURE0 + this.unitNo);\r\n        this.bind();\r\n        gl.bindSampler(this.unitNo, this.sampler);\r\n        gl.uniform1i(this.location, this.unitNo);\r\n      }\r\n\r\n    }\r\n\r\n    // シェーダーのセットアップ\r\n\r\n    // this.programInfo = twgl.createProgramInfo(gl,[vs,fs]);\r\n    const program = this.program = gl2.createProgram(vs, fs);\r\n    gl.useProgram(program);\r\n\r\n    this.positionLocation = gl.getAttribLocation(program, 'position');\r\n    this.texcoordLocation = gl.getAttribLocation(program, 'texcoord');\r\n\r\n    // VAOのセットアップ\r\n    this.vao = gl.createVertexArray();\r\n    gl.bindVertexArray(this.vao);\r\n\r\n    // Text用ジオメトリのセットアップ //\r\n    // インターリーブ形式\r\n    this.bufferData = new Float32Array([\r\n      // pos  texcoord\r\n      -1.0, 1.0, 0.0, 1.0,\r\n      1.0, 1.0, 1.0, 1.0,\r\n      -1.0, -1.0, 0.0, 0.0,\r\n      1.0, -1.0, 1.0, 0.0\r\n    ]);\r\n\r\n    this.buffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, this.bufferData, gl.STATIC_DRAW);\r\n    const positionSize = this.positionSize = 2;\r\n    const texcoordSize = this.texcoordSize = 2;\r\n    const stride = this.stride = this.bufferData.BYTES_PER_ELEMENT * (positionSize + texcoordSize);\r\n    const positionOffset = this.positionOffset = 0;\r\n    const texcoordOffset = this.texcoordOffset = positionSize * this.bufferData.BYTES_PER_ELEMENT;\r\n\r\n    gl.enableVertexAttribArray(this.positionLocation);\r\n    gl.vertexAttribPointer(this.positionLocation, positionSize, gl.FLOAT, true, stride, positionOffset);\r\n\r\n    gl.enableVertexAttribArray(this.texcoordLocation);\r\n    gl.vertexAttribPointer(this.texcoordLocation, texcoordSize, gl.FLOAT, true, stride, texcoordOffset);\r\n\r\n    this.ibo = gl.createBuffer();\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.ibo);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0, 2, 1, 2, 3, 1]), gl.STATIC_DRAW);\r\n\r\n    gl.bindVertexArray(null);\r\n\r\n    // Uniform変数\r\n\r\n    this.blinkLocation = gl.getUniformLocation(program, 'blink');\r\n    this.textBufferLocation = gl.getUniformLocation(program, 'textBuffer');\r\n    this.fontLocation = gl.getUniformLocation(program, 'font');\r\n    this.palletLocation = gl.getUniformLocation(program, 'pallet');\r\n    this.vwidthLocation = gl.getUniformLocation(program, 'vwidth');\r\n    this.vheightLocation = gl.getUniformLocation(program, 'vheight');\r\n\r\n    // GPUにテキスト用VRAMを渡すためのテクスチャを作る\r\n    this.textBufferTexture = new TextTexture({\r\n       location: this.textBufferLocation,\r\n       unitNo: 0, \r\n       cpubuffer: this.textBuffer, \r\n       width: this.twidth, \r\n       height: this.theight,\r\n       internalFormat:gl.R32UI, \r\n       format:gl.RED_INTEGER, \r\n       type:gl.UNSIGNED_INT\r\n\r\n    });\r\n\r\n    // フォントのセットアップ\r\n    this.fontTexWidth = 256;//256 * 8\r\n    this.fontTexHeight = textBitmap.length / 256 | 0;\r\n    this.fontBuffer = textBitmap;\r\n\r\n    // フォント用テクスチャの生成\r\n\r\n    this.textFontTexture = new TextTexture({ location: this.fontLocation, unitNo: 2, cpubuffer: this.fontBuffer, width: this.fontTexWidth, height: this.fontTexHeight });\r\n\r\n    // パレットのセットアップ\r\n    this.pallet = new Uint8Array([0, 1, 2, 3, 4, 5, 6, 7]);\r\n\r\n    this.palletTexture = new TextTexture({ location: this.palletLocation, unitNo: 3, cpubuffer: this.pallet, width: this.pallet.length, height: 1 });\r\n\r\n    this.sy = 0;//描画開始スタート位置\r\n\r\n    //this.cls();\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  /// 画面消去\r\n  cls() {\r\n    this.textBuffer.fill(0);\r\n    this.needsUpdate = true;\r\n  }\r\n\r\n  // print(x, y, str, blink = false, color = 7, bgcolor = 0) {\r\n\r\n  //   let { chars, attrs } = this.convertStr(str);\r\n\r\n  //   if (x == this.CENTER) {\r\n  //     // センタリング\r\n  //     x = ((this.twidth - chars.length) / 2 + .5) | 0;\r\n  //   } else if (x == this.LEFT) {\r\n  //     // 左寄せ\r\n  //     x = 0;\r\n  //   } else if (x == this.RIGHT) {\r\n  //     // 右寄せ\r\n  //     x = this.twidth - chars.length;\r\n  //   }\r\n\r\n  //   let offset = x + y * this.twidth;\r\n  //   const attr = color << 4 | bgcolor | (blink ? 0x8 : 0);\r\n\r\n\r\n  //   for (let i = 0, e = chars.length; i < e; ++i) {\r\n\r\n  //     let code = chars[i];\r\n  //     if (code == 0xa) {\r\n  //       y = this.addY(y);\r\n  //       offset = y * this.twidth;\r\n  //     }\r\n\r\n  //     this.textBuffer[offset] = chars[i];\r\n  //     this.attrBuffer[offset] = attr | attrs[i];\r\n\r\n  //     ++offset;\r\n  //     ++x;\r\n  //     if (x == this.twidth) {\r\n  //       x = 0;\r\n  //       y = this.addY(y);\r\n  //       offset = x + y * this.twidth;\r\n  //     }\r\n  //   }\r\n\r\n  //   this.needsUpdate = true;\r\n\r\n\r\n  // }\r\n\r\n  // addY(y) {\r\n  //   ++y;\r\n  //   if (y == this.theight) {\r\n  //     this.scroll();\r\n  //     y = this.theight - 1;\r\n  //   }\r\n  //   return y;\r\n  // }\r\n\r\n  // scroll() {\r\n  //   for (let y = (this.theight - 1) * this.twidth, ey = this.twidth; y > ey; ey += this.twidth) {\r\n  //     const desty = y - this.twidth;\r\n  //     for (let x = 0, ex = this.twidth; x < ex; ++x) {\r\n  //       this.textBuffer[x + desty] = this.textBuffer[x + y];\r\n  //       this.attrBuffer[x + desty] = this.attrBuffer[x + y];\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  // fillText(x, y, w, h, str, blink = false, color = 7, bgcolor = 0, fillSpace = true) {\r\n\r\n  //   let { chars, attrs } = this.convertStr(str);\r\n\r\n  //   let end = w * h;\r\n\r\n  //   const attr = color << 4 | bgcolor | (blink ? 0x8 : 0);\r\n\r\n  //   if (fillSpace && chars.length < end) {\r\n  //     while (chars.length <= end) {\r\n  //       chars.push(0x00);\r\n  //       attrs.push(attr);\r\n  //     }\r\n  //   }\r\n\r\n  //   let spos = 0;\r\n  //   end = chars.length;\r\n\r\n  //   let cx = x, cy = y;\r\n  //   let o = cy * this.twidth;\r\n  //   while (spos <= end) {\r\n  //     let code = chars[spos];\r\n  //     if (code == 0xa) {\r\n  //       ++cy;\r\n  //       o = cy * this.twidth;\r\n  //     } else {\r\n  //       this.textBuffer[cx + o] = chars[spos];\r\n  //       this.attrBuffer[cx + o] = attr | attrs[spos];\r\n  //     }\r\n  //     ++cx;\r\n  //     if (cx > (x + w)) {\r\n  //       cx = x;\r\n  //       ++cy;\r\n  //       o = cy * this.twidth;\r\n  //     }\r\n  //     ++spos;\r\n  //   }\r\n\r\n  //   this.needsUpdate = true;\r\n\r\n  // }\r\n\r\n  /// テキストデータをもとにテクスチャーに描画する\r\n  render() {\r\n    const gl = this.gl;\r\n    // const ctx = this.ctx;\r\n    this.blinkCount = (this.blinkCount + 1) & 0xf;\r\n    if (!this.blinkCount) {\r\n      this.blink = !this.blink;\r\n      for(let i = 0;i < 8;++i){\r\n        this.pallet[i] =  (this.pallet[i] + 1) & 7;\r\n      }\r\n      this.needsUpdate = true;\r\n    }\r\n    //this.uniforms.blink = this.blink;\r\n    gl.useProgram(this.program);\r\n    gl.bindVertexArray(this.vao);\r\n\r\n    if (this.needsUpdate) {\r\n      gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n      this.textBufferTexture.bind();\r\n      this.textBufferTexture.update();\r\n      // this.textAttrTexture.bind();\r\n      // this.textAttrTexture.update();\r\n      this.palletTexture.bind();\r\n      this.palletTexture.update();\r\n      this.textFontTexture.bind();\r\n      this.textFontTexture.update();\r\n      this.palletTexture.unbind();\r\n    }\r\n\r\n\r\n    gl.uniform1f(this.blinkLocation, this.blink);\r\n    gl.uniform1f(this.vwidthLocation, this.vwidth);\r\n    gl.uniform1f(this.vheightLocation, this.vheight);\r\n\r\n    this.textBufferTexture.activate();\r\n//    this.textAttrTexture.activate();\r\n    this.textFontTexture.activate();\r\n    this.palletTexture.activate();\r\n\r\n    // twgl.setBuffersAndAttributes(gl, this.programInfo, this.bufferInfo);\r\n    // twgl.setUniforms(this.programInfo, this.uniforms);\r\n\r\n    gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\r\n    gl.bindVertexArray(null);\r\n    this.needsUpdate = false;\r\n\r\n  }\r\n\r\n  static calc_memory_size(width , height){\r\n    return width * height * 4;\r\n  }\r\n}\r\n\r\nTextPlane.prototype.CENTER = Symbol('Center');\r\nTextPlane.prototype.LEFT = Symbol('LEFT');\r\nTextPlane.prototype.RIGHT = Symbol('RIGHT');\r\nTextPlane.prototype.charSize = 8;/* 文字サイズ pixel */\r\n\r\n","'use strict';\r\n//import * as text from './text.js';\r\nimport EventEmitter from './eventEmitter3.js';\r\nimport  {vec3} from './gl-matrix/gl-matrix.js';\r\n//import * as twgl from '../../twgl/twgl-full.js';\r\nimport GL2 from './gl2.js';\r\nimport Screen from './screen.js';\r\nimport VScreen from './vscreen.js';\r\nimport TextPlane from './text2.js';\r\n\r\nexport class Console extends EventEmitter {\r\n  constructor(virtualWidth = 240 , virtualHeight = 320) {\r\n    super();\r\n    this.VIRTUAL_WIDTH = virtualWidth;\r\n    this.VIRTUAL_HEIGHT = virtualHeight;\r\n    this.CONSOLE_WIDTH = 0;\r\n    this.CONSOLE_HEIGHT = 0;\r\n    this.RENDERER_PRIORITY = 100000 | 0;\r\n\r\n    this.ANGLE_OF_VIEW = 45.0;\r\n    this.V_RIGHT = this.VIRTUAL_WIDTH / 2.0;\r\n    this.V_TOP = this.VIRTUAL_HEIGHT / 2.0;\r\n    this.V_LEFT = -1 * this.VIRTUAL_WIDTH / 2.0;\r\n    this.V_BOTTOM = -1 * this.VIRTUAL_HEIGHT / 2.0;\r\n    this.CHAR_SIZE = 8;\r\n    this.TEXT_WIDTH = this.VIRTUAL_WIDTH / this.CHAR_SIZE | 0; \r\n    this.TEXT_HEIGHT = this.VIRTUAL_HEIGHT / this.CHAR_SIZE | 0;\r\n    this.PIXEL_SIZE = 1;\r\n    this.ACTUAL_CHAR_SIZE = this.CHAR_SIZE * this.PIXEL_SIZE;\r\n    this.SPRITE_SIZE_X = 16.0;\r\n    this.SPRITE_SIZE_Y = 16.0;\r\n    this.CAMERA_Z = this.VIRTUAL_HEIGHT / (Math.tan(this.ANGLE_OF_VIEW / 360 * Math.PI) * 2);\r\n    this.MEMORY_SIZE_NEEDED = TextPlane.calc_memory_size(this.TEXT_WIDTH,this.TEXT_HEIGHT);\r\n\r\n    this.scale_ = 1.0;\r\n    this.offset_ = vec3.create();\r\n\r\n    this.renderer = null;\r\n    this.stats = null;\r\n    this.scene = null;\r\n    this.camera = null;\r\n    this.textPlane = null;\r\n    this.position = this.POS_CENTER;\r\n  }\r\n\r\n  initConsole({textBitmap,memory,offset}) {\r\n\r\n    this.gl = document.querySelector('#c').getContext('webgl2');\r\n    const gl = this.gl;\r\n    const gl2 = this.gl2 = new GL2(this.gl);\r\n    gl.enable(gl.BLEND);\r\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n    \r\n    // this.renderer = new THREE.WebGLRenderer({ antialias: false, sortObjects: true });\r\n    // const renderer = this.renderer;\r\n    this.resize(false);\r\n\r\n    // フレームバッファの作成\r\n    const frameBuffer = this.frameBuffer = gl2.createFrameBuffer(this.VIRTUAL_WIDTH,this.VIRTUAL_HEIGHT);\r\n    this.texture = this.frameBuffer.texture;\r\n \r\n    gl.bindTexture(gl.TEXTURE_2D,this.texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n    this.vscreen = new VScreen(this);\r\n    this.text = new TextPlane({gl2:gl2,vwidth:this.VIRTUAL_WIDTH,vheight:this.VIRTUAL_HEIGHT,textBitmap:textBitmap,memory:memory,offset:offset});\r\n    this.screen = new Screen(this,this.texture);\r\n\r\n    window.addEventListener('resize', this.resize.bind(this));\r\n\r\n    // コンソールのセットアップ\r\n  }\r\n\r\n  resize(emit = true) {\r\n    this.calcScreenSize();\r\n    this.calcPosition();\r\n    this.gl.canvas.width = this.gl.canvas.clientWidth;\r\n    this.gl.canvas.height = this.gl.canvas.clientHeight;\r\n\r\n//    twgl.resizeCanvasToDisplaySize(this.gl.canvas);\r\n    this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\r\n    emit && this.emit('resize', this);\r\n  }\r\n\r\n  get position() {\r\n    return this.position_;\r\n  }\r\n\r\n  set position(v) {\r\n    if (this.position_ == v) return;\r\n    this.position_ = v;\r\n    this.calcPosition();\r\n  }\r\n\r\n  calcPosition() {\r\n    switch (this.position_) {\r\n      case this.POS_CENTER:\r\n        this.offsetX = 0;\r\n        break;\r\n      case this.POS_RIGHT:\r\n        this.offsetX = 1.0 - this.CONSOLE_WIDTH / window.innerWidth * this.scale;\r\n        break;\r\n    }\r\n  }\r\n\r\n  initTextPlane() {\r\n    //this.textPlane = new text.TextPlane(this.bufferScene,this.VIRTUAL_WIDTH,this.VIRTUAL_HEIGHT);\r\n  }\r\n\r\n  render(time) {\r\n\r\n    const gl = this.gl;\r\n    const frameBuffer = this.frameBuffer.frameBuffer;\r\n    gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER,frameBuffer);\r\n    this.gl.viewport(0, 0, this.VIRTUAL_WIDTH, this.VIRTUAL_HEIGHT);\r\n\r\n    gl.enable(gl.DEPTH_TEST)\r\n    gl.depthFunc(gl.LEQUAL);\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.clearColor(0,0,0,0.0);\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n    this.vscreen.render();\r\n    this.text.render();\r\n\r\n    gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER,null);\r\n    this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\r\n    \r\n    this.screen.render();\r\n  }\r\n\r\n  clear() {\r\n    this.renderer.clear();\r\n  }\r\n\r\n  calcScreenSize() {\r\n    let width = window.innerWidth;\r\n    let height = window.innerHeight;\r\n    if (width >= height) {\r\n      width = height * this.VIRTUAL_WIDTH / this.VIRTUAL_HEIGHT;\r\n      while (width > window.innerWidth) {\r\n        --height;\r\n        width = height * this.VIRTUAL_WIDTH / this.VIRTUAL_HEIGHT;\r\n      }\r\n    } else {\r\n      height = width * this.VIRTUAL_HEIGHT / this.VIRTUAL_WIDTH;\r\n      while (height > window.innerHeight) {\r\n        --width;\r\n        height = width * this.VIRTUAL_HEIGHT / this.VIRTUAL_WIDTH;\r\n      }\r\n    }\r\n    this.CONSOLE_WIDTH = width;\r\n    this.CONSOLE_HEIGHT = height;\r\n  }\r\n\r\n  get scale() {\r\n    return this.scale_;\r\n  }\r\n\r\n  set scale(v) {\r\n    if (this.scale_ != v) {\r\n      this.scale_ = v;\r\n      this.resize();\r\n    }\r\n  }\r\n\r\n  get offsetX() {\r\n    return this.offset_.x;\r\n  }\r\n\r\n  set offsetX(v) {\r\n    if (this.offset_.x != v) {\r\n      this.offset_.x = v;\r\n      //this.bufferMesh.position.setX(v);\r\n    }\r\n  }\r\n\r\n  get offsetY() {\r\n    return this.offset_.y;\r\n  }\r\n\r\n  set offsetY(v) {\r\n    if (this.offset_.y != v) {\r\n      this.offset_.y = v;\r\n      //this.bufferMesh.position.setY(v);\r\n    }\r\n  }\r\n}\r\n\r\nConsole.prototype.POS_CENTER = Symbol('POS_CENTER');\r\nConsole.prototype.POS_RIGHT = Symbol('POS_RIGHT');\r\n\r\nexport function checkVisibilityAPI() {\r\n  // hidden プロパティおよび可視性の変更イベントの名前を設定\r\n  if (typeof document.hidden !== \"undefined\") { // Opera 12.10 や Firefox 18 以降でサポート \r\n    this.hidden = \"hidden\";\r\n    window.visibilityChange = \"visibilitychange\";\r\n  } else if (typeof document.mozHidden !== \"undefined\") {\r\n    this.hidden = \"mozHidden\";\r\n    window.visibilityChange = \"mozvisibilitychange\";\r\n  } else if (typeof document.msHidden !== \"undefined\") {\r\n    this.hidden = \"msHidden\";\r\n    window.visibilityChange = \"msvisibilitychange\";\r\n  } else if (typeof document.webkitHidden !== \"undefined\") {\r\n    this.hidden = \"webkitHidden\";\r\n    window.visibilityChange = \"webkitvisibilitychange\";\r\n  }\r\n}\r\n\r\n// export function calcScreenSize() {\r\n//   var width = window.innerWidth;\r\n//   var height = window.innerHeight;\r\n//   if (width >= height) {\r\n//     width = height * this.VIRTUAL_WIDTH / this.VIRTUAL_HEIGHT;\r\n//     while (width > window.innerWidth) {\r\n//       --height;\r\n//       width = height * this.VIRTUAL_WIDTH / this.VIRTUAL_HEIGHT;\r\n//     }\r\n//   } else {\r\n//     height = width * this.VIRTUAL_HEIGHT / this.VIRTUAL_WIDTH;\r\n//     while (height > window.innerHeight) {\r\n//       --width;\r\n//       height = width * this.VIRTUAL_HEIGHT / this.VIRTUAL_WIDTH;\r\n//     }\r\n//   }\r\n//   this.CONSOLE_WIDTH = width;\r\n//   this.CONSOLE_HEIGHT = height;\r\n// }\r\n\r\n\r\n","/*\n * vox.js 1.1.0-beta\n * https://github.com/daishihmr/vox.js\n * \n * The MIT License (MIT)\n * Copyright © 2015, 2016 daishi_hmr, dev7.jp\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the “Software”), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n * of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following\n * conditions:\n * \n * The above copyright notice and this permission notice shall be included in all copies or substantial portions\n * of the Software.\n * \n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\"use strict\";\n\n/**\n * @namespace\n */\nconst vox = {};\nexport default vox;\n\n(function() {\n    if (typeof(window) !== \"undefined\") {\n        vox.global = window;\n        vox.global.vox = vox;\n    } else {\n        vox.global = global;\n    }\n\n    if (typeof(module) !== \"undefined\") {\n        module.exports = vox;\n    }\n\n})();\n\n(function() {\n\n    /**\n     * @constructor\n     * @property {Object} size {x, y, z}\n     * @property {Array} voxels [{x, y, z, colorIndex}...]\n     * @property {Array} palette [{r, g, b, a}...]\n     */\n    vox.VoxelData = function() {\n        this.size = null;\n        this.voxels = [];\n        this.palette = [];\n        \n        this.anim = [{\n            size: null,\n            voxels: [],\n        }];\n    };\n    \n})();\n\n(function() {\n    \n    vox.Xhr = function() {};\n    vox.Xhr.prototype.getBinary = function(url) {\n        return new Promise(function(resolve, reject) {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, true);\n            xhr.responseType = \"arraybuffer\";\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === 4 && (xhr.status === 200 || xhr.status === 0)) {\n                    var arrayBuffer = xhr.response;\n                    if (arrayBuffer) {\n                        var byteArray = new Uint8Array(arrayBuffer);\n                        resolve(byteArray);\n                    }\n                }\n            };\n            xhr.send(null);\n        });\n    };\n    \n})();\n\n(function() {\n    /** \n     * @constructor\n     */\n    vox.Parser = function() {};\n    \n    /**\n     * 戻り値のPromiseは成功すると{@link vox.VoxelData}を返す.\n     * @param {String} url\n     * @return {Promise}\n     */\n    vox.Parser.prototype.parse = function(url) {\n        var self = this;\n        var xhr = new vox.Xhr();\n        return xhr.getBinary(url).then(function(uint8Array) {\n            return new Promise(function(resolve, reject) {\n                self.parseUint8Array(uint8Array, function(error, voxelData) {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        resolve(voxelData);\n                    }\n                });\n            });\n        });\n    };\n\n    if (typeof(require) !== \"undefined\") {\n        var fs = require(\"fs\");\n        /**\n         * for node.js\n         * @param {String} path\n         * @param {function} callback\n         */\n        vox.Parser.prototype.parseFile = function(path, callback) {\n            fs.readFile(path, function(error, data) {\n                if (error) {\n                    return callback(error);\n                } else {\n                    var uint8Array = new Uint8Array(new ArrayBuffer(data.length));\n                    for (var i = 0, len = data.length; i < len; i++) {\n                        uint8Array[i] = data[i];\n                    }\n                    this.parseUint8Array(uint8Array, callback);\n                }\n            }.bind(this));\n        };\n    }\n    \n    /**\n     * @param {Uint8Array} uint8Array\n     * @param {function} callback\n     */\n    vox.Parser.prototype.parseUint8Array = function(uint8Array, callback) {\n        var dataHolder = new DataHolder(uint8Array);\n        try {\n            root(dataHolder);\n            dataHolder.data.size = dataHolder.data.anim[0].size;\n            dataHolder.data.voxels = dataHolder.data.anim[0].voxels;\n            if (dataHolder.data.palette.length === 0) {\n                debugLog(\"(use default palette)\");\n                dataHolder.data.palette = vox.defaultPalette;\n            } else {\n                dataHolder.data.palette.unshift(dataHolder.data.palette[0]);\n                dataHolder.data.palette.pop();\n            }\n\n            callback(null, dataHolder.data);\n        } catch (e) {\n            callback(e);\n        }\n    };\n    \n    var DataHolder = function(uint8Array) {\n        this.uint8Array = uint8Array;\n        this.cursor = 0;\n        this.data = new vox.VoxelData();\n\n        this._arrayArray = [];\n        this._cursorArray = [];\n    };\n    DataHolder.prototype.next = function() {\n        if (this.uint8Array.byteLength <= this.cursor) {\n            throw new Error(\"uint8Array index out of bounds: \" + this.uint8Array.byteLength);\n        }\n        return this.uint8Array[this.cursor++];\n    };\n    DataHolder.prototype.hasNext = function() {\n        return this.cursor < this.uint8Array.byteLength;\n    };\n    DataHolder.prototype.push = function(chunkSize) {\n        var array = new Uint8Array(chunkSize);\n        for (var i = 0; i < array.length; i++) {\n            array[i] = this.next();\n        }\n\n        this._arrayArray.push(this.uint8Array);\n        this._cursorArray.push(this.cursor);\n\n        this.uint8Array = array;\n        this.cursor = 0;\n    };\n    DataHolder.prototype.pop = function() {\n        this.uint8Array = this._arrayArray.pop();\n        this.cursor = this._cursorArray.pop();\n    };\n    DataHolder.prototype.parseInt32 = function() {\n        var intValue = 0;\n        for (var i = 0; i < 4; i++) {\n            intValue += this.next() * Math.pow(256, i);\n        }\n        // unsigned to signed\n        return ~~intValue;\n    };\n    DataHolder.prototype.parseString = function() {\n        var n = this.parseInt32();\n        var str = \"\";\n        for (var i = 0; i < n; i++) {\n            str += String.fromCharCode(this.next());\n        }\n        return str;\n    };\n    DataHolder.prototype.parseDict = function() {\n        var n = this.parseInt32();\n        // debugLog(\"    dict num of pair = \" + n);\n        var dict = {};\n        for (var i = 0; i < n; i++) {\n            var key = this.parseString();\n            var value = this.parseString();\n            dict[key] = value;\n        }\n        return dict;\n    };\n    DataHolder.prototype.parseRotation = function() {\n        var bytes = this.next();\n    };\n\n    var root = function(dataHolder) {\n        parseMagicNumber(dataHolder);\n        parseVersionNumber(dataHolder);\n        parseChunk(dataHolder); // main chunk\n    };\n    \n    var parseMagicNumber = function(dataHolder) {\n        var str = \"\";\n        for (var i = 0; i < 4; i++) {\n            str += String.fromCharCode(dataHolder.next());\n        }\n        \n        if (str !== \"VOX \") {\n            throw new Error(\"invalid magic number '\" + str + \"'\");\n        }\n    };\n    \n    var parseVersionNumber = function(dataHolder) {\n        var ver = dataHolder.parseInt32();\n        console.info(\".vox format version \" + ver);\n    };\n    \n    var parseChunk = function(dataHolder) {\n        if (!dataHolder.hasNext()) return false;\n\n        var chunkId = parseChunkId(dataHolder);\n        var chunkSize = parseSizeOfChunkContents(dataHolder);\n        parseTotalSizeOfChildrenChunks(dataHolder);\n        parseContents(chunkId, chunkSize, dataHolder);\n        while (parseChunk(dataHolder));\n        return dataHolder.hasNext();\n    };\n    \n    var parseChunkId = function(dataHolder) {\n        var id = \"\";\n        for (var i = 0; i < 4; i++) {\n            id += String.fromCharCode(dataHolder.next());\n        }\n        debugLog(\"chunk id = \" + id);\n        return id;\n    };\n    \n    var parseSizeOfChunkContents = function(dataHolder) {\n        var size = dataHolder.parseInt32();\n        // debugLog(\"  size of chunk = \" + size);\n        return size;\n    };\n    \n    var parseTotalSizeOfChildrenChunks = function(dataHolder) {\n        var size = dataHolder.parseInt32();\n    };\n\n    var parseContents = function(chunkId, chunkSize, dataHolder) {\n        dataHolder.push(chunkSize);\n\n        switch (chunkId) {\n        case \"PACK\":\n            contentsOfPackChunk(dataHolder);\n            break;\n        case \"SIZE\":\n            contentsOfSizeChunk(dataHolder);\n            break;\n        case \"XYZI\":\n            contentsOfVoxelChunk(dataHolder);\n            break;\n        case \"RGBA\":\n            contentsOfPaletteChunk(dataHolder);\n            break;\n        case \"MATT\":\n            contentsOfMaterialChunk(dataHolder);\n            break;\n        case \"nTRN\":\n            contentsOfTransformNodeChunk(dataHolder);\n            break;\n        case \"nGRP\":\n            contentsOfGroupNodeChunk(dataHolder);\n            break;\n        case \"nSHP\":\n            contentsOfShapeNodeChunk(dataHolder);\n            break;\n        case \"MATL\":\n            contentsOfMaterialExChunk(dataHolder);\n            break;\n        default:\n            unsupportedChunkType(dataHolder);\n            break;\n        }\n\n        dataHolder.pop();\n    };\n    \n    var contentsOfPackChunk = function(dataHolder) {\n        var size = dataHolder.parseInt32();\n        debugLog(\"  num of SIZE and XYZI chunks = \" + size);\n    };\n    \n    var contentsOfSizeChunk = function(dataHolder) {\n        var x = dataHolder.parseInt32();\n        var y = dataHolder.parseInt32();\n        var z = dataHolder.parseInt32();\n        debugLog(\"  bounding box size = \" + x + \", \" + y + \", \" + z);\n\n        var data = dataHolder.data.anim[dataHolder.data.anim.length - 1];\n        if (data.size) {\n            data = { size: null, voxels: [] };\n            dataHolder.data.anim.push(data);\n        }\n        data.size = {\n            x: x,\n            y: y,\n            z: z,\n        };\n    };\n    \n    var contentsOfVoxelChunk = function(dataHolder) {\n        var num = dataHolder.parseInt32();\n        debugLog(\"  voxel size = \" + num);\n\n        var data = dataHolder.data.anim[dataHolder.data.anim.length - 1];\n        if (data.voxels.length) {\n            data = { size: null, voxels: [] };\n            dataHolder.data.anim.push(data);\n        }\n        for (var i = 0; i < num; i++) {\n            data.voxels.push({\n                x: dataHolder.next(),\n                y: dataHolder.next(),\n                z: dataHolder.next(),\n                colorIndex: dataHolder.next(),\n            });\n        }\n    };\n\n    var contentsOfPaletteChunk = function(dataHolder) {\n        debugLog(\"  palette\");\n        for (var i = 0; i < 256; i++) {\n            var p = {\n                r: dataHolder.next(),\n                g: dataHolder.next(),\n                b: dataHolder.next(),\n                a: dataHolder.next(),\n            };\n            dataHolder.data.palette.push(p);\n        }\n    };\n    \n    var contentsOfMaterialChunk = function(dataHolder) {\n        debugLog(\"  material\");\n        var id = dataHolder.parseInt32();\n        debugLog(\"    id = \" + id);\n\n        var type = dataHolder.parseInt32();\n        debugLog(\"    type = \" + type + \" (0:diffuse 1:metal 2:glass 3:emissive)\");\n\n        var weight = dataHolder.parseInt32();\n        debugLog(\"    weight = \" + logFloat(weight));\n\n        var propertyBits = dataHolder.parseInt32();\n        debugLog(\"    property bits = \" + propertyBits.toString(2));\n        var plastic = !!(propertyBits & 1);\n        var roughness = !!(propertyBits & 2);\n        var specular = !!(propertyBits & 4);\n        var ior = !!(propertyBits & 8);\n        var attenuation = !!(propertyBits & 16);\n        var power = !!(propertyBits & 32);\n        var glow = !!(propertyBits & 64);\n        var isTotalPower = !!(propertyBits & 128);\n        debugLog(\"      Plastic = \" + plastic);\n        debugLog(\"      Roughness = \" + roughness);\n        debugLog(\"      Specular = \" + specular);\n        debugLog(\"      IOR = \" + ior);\n        debugLog(\"      Attenuation = \" + attenuation);\n        debugLog(\"      Power = \" + power);\n        debugLog(\"      Glow = \" + glow);\n        debugLog(\"      isTotalPower = \" + isTotalPower);\n\n        var valueNum = 0;\n        if (plastic) valueNum += 1;\n        if (roughness) valueNum += 1;\n        if (specular) valueNum += 1;\n        if (ior) valueNum += 1;\n        if (attenuation) valueNum += 1;\n        if (power) valueNum += 1;\n        if (glow) valueNum += 1;\n        // isTotalPower is no value\n        \n        var values = [];\n        for (var j = 0; j < valueNum; j++) {\n            values[j] = dataHolder.parseInt32();\n            debugLog(\"    normalized property value = \" + logFloat(values[j]));\n        }\n    };\n\n    var contentsOfTransformNodeChunk = function(dataHolder) {\n        var nodeId = dataHolder.parseInt32();\n        var nodeAttributes = dataHolder.parseDict();\n        var childNodeId = dataHolder.parseInt32();\n        var reservedId = dataHolder.parseInt32();\n        var layerId = dataHolder.parseInt32();\n        var numOfFrames = dataHolder.parseInt32();\n        var frameAttributes = [];\n        for (var i = 0; i < numOfFrames; i++) {\n            frameAttributes[i] = dataHolder.parseDict();\n        }\n\n        debugLog(\"  nodeId = \" + nodeId);\n        debugLog(\"  nodeAttributes\", nodeAttributes);\n        debugLog(\"  childNodeId = \" + childNodeId);\n        debugLog(\"  reservedId = \" + reservedId);\n        debugLog(\"  layerId = \" + layerId);\n        debugLog(\"  numOfFrames = \" + numOfFrames);\n        debugLog(\"  frameAttributes\", frameAttributes);\n    };\n\n    var contentsOfGroupNodeChunk = function(dataHolder) {\n        var nodeId = dataHolder.parseInt32();\n        var nodeAttributes = dataHolder.parseDict();\n        var numOfChildren = dataHolder.parseInt32();\n        var childNodeIds = [];\n        for (var i = 0; i < numOfChildren; i++) {\n            childNodeIds[i] = dataHolder.parseInt32();\n        }\n        \n        debugLog(\"  nodeId = \" + nodeId);\n        debugLog(\"  nodeAttributes\", nodeAttributes);\n        debugLog(\"  numOfChildren = \" + numOfChildren);\n        debugLog(\"  childNodeIds\", childNodeIds);\n    };\n\n    var contentsOfShapeNodeChunk = function(dataHolder) {\n        var nodeId = dataHolder.parseInt32();\n        var nodeAttributes = dataHolder.parseDict();\n        var numOfModels = dataHolder.parseInt32();\n        var modelIds = [];\n        var modelAttributes = [];\n        for (var i = 0; i < numOfModels; i++) {\n            modelIds[i] = dataHolder.parseInt32();\n            modelAttributes[i] = dataHolder.parseDict();\n        }\n\n        debugLog(\"  nodeId = \" + nodeId);\n        debugLog(\"  nodeAttributes\", nodeAttributes);\n        debugLog(\"  numOfModels = \" + numOfModels);\n        debugLog(\"  modelIds\", modelIds);\n        debugLog(\"  modelAttributes\", modelAttributes);\n    };\n\n    var contentsOfMaterialExChunk = function(dataHolder) {\n        var materialId = dataHolder.parseInt32();\n        var properties = dataHolder.parseDict();\n\n        debugLog(\"  materialId = \" + materialId);\n        debugLog(\"  properties\", properties);\n    };\n\n    var unsupportedChunkType = function(dataHolder) {};\n\n    var logFloat = function(bytes) {\n        var bin = bytes.toString(2);\n        while(bin.length < 32) {\n            bin = \"0\" + bin;\n        }\n        var sign = bin[0] == \"0\" ? 1 : -1;\n        var exponent = Number.parseInt(bin.substring(1, 9), 2) - 127;\n        var fraction = Number.parseFloat(\"1.\" + Number.parseInt(bin.substring(9), 2));\n        return sign * Math.pow(2, exponent) * fraction;\n    };\n\n    var debugLog = function(arg0, arg1) {\n        // console.debug(arg0, arg1);\n    };\n\n})();\n\n(function() {\n\n    /**\n     * @constructor\n     *\n     * @param {vox.VoxelData} voxelData\n     * @param {Object=} param\n     * @param {number=} param.voxelSize ボクセルの大きさ. default = 1.0.\n     * @param {boolean=} param.vertexColor 頂点色を使用する. default = false.\n     * @param {boolean=} param.optimizeFaces 隠れた頂点／面を削除する. dafalue = true.\n     * @param {boolean=} param.originToBottom 地面の高さを形状の中心にする. dafalue = true.\n     * @property {THREE.Geometry} geometry\n     * @property {THREE.Material} material\n     */\n    vox.MeshBuilder = function(voxelData, param) {\n        if (vox.MeshBuilder.textureFactory === null) vox.MeshBuilder.textureFactory = new vox.TextureFactory();\n        \n        param = param || {};\n        this.voxelData = voxelData;\n        this.voxelSize = param.voxelSize || vox.MeshBuilder.DEFAULT_PARAM.voxelSize;\n        this.vertexColor = (param.vertexColor === undefined) ? vox.MeshBuilder.DEFAULT_PARAM.vertexColor : param.vertexColor;\n        this.optimizeFaces = (param.optimizeFaces === undefined) ? vox.MeshBuilder.DEFAULT_PARAM.optimizeFaces : param.optimizeFaces;\n        this.originToBottom = (param.originToBottom === undefined) ? vox.MeshBuilder.DEFAULT_PARAM.originToBottom : param.originToBottom;\n\n        this.geometry = null;\n        this.material = null;\n        \n        this.build();\n    };\n\n    vox.MeshBuilder.DEFAULT_PARAM = {\n        voxelSize: 1.0,\n        vertexColor: false,\n        optimizeFaces: true,\n        originToBottom: true,\n    };\n\n    /**\n     * Voxelデータからジオメトリとマテリアルを作成する.\n     */\n    vox.MeshBuilder.prototype.build = function() {\n        this.geometry = new THREE.Geometry();\n        this.material = new THREE.MeshPhongMaterial();\n\n        // 隣接ボクセル検索用ハッシュテーブル\n        this.hashTable = createHashTable(this.voxelData.voxels);\n        \n        var offsetX = (this.voxelData.size.x - 1) * -0.5;\n        var offsetY = (this.voxelData.size.y - 1) * -0.5;\n        var offsetZ = (this.originToBottom) ? 0 : (this.voxelData.size.z - 1) * -0.5;\n        var matrix = new THREE.Matrix4();\n        this.voxelData.voxels.forEach(function(voxel) {\n            var voxGeometry = this._createVoxGeometry(voxel);\n            if (voxGeometry) {\n                matrix.makeTranslation((voxel.x + offsetX) * this.voxelSize, (voxel.z + offsetZ) * this.voxelSize, -(voxel.y + offsetY) * this.voxelSize);\n                this.geometry.merge(voxGeometry, matrix);\n            }\n        }.bind(this));\n\n        if (this.optimizeFaces) {\n            this.geometry.mergeVertices();\n        }\n        this.geometry.computeFaceNormals();\n        \n        if (this.vertexColor) {\n            this.material.vertexColors = THREE.FaceColors;\n        } else {\n            this.material.map = vox.MeshBuilder.textureFactory.getTexture(this.voxelData);\n        }\n    };\n\n    /**\n     * @return {THREE.Texture}\n     */\n    vox.MeshBuilder.prototype.getTexture = function() {\n        return vox.MeshBuilder.textureFactory.getTexture(this.voxelData);\n    };\n\n    vox.MeshBuilder.prototype._createVoxGeometry = function(voxel) {\n\n        // 隣接するボクセルを検索し、存在する場合は面を無視する\n        var ignoreFaces = [];\n        if (this.optimizeFaces) {\n            six.forEach(function(s) {\n                if (this.hashTable.has(voxel.x + s.x, voxel.y + s.y, voxel.z + s.z)) {\n                    ignoreFaces.push(s.ignoreFace);\n                }\n            }.bind(this));\n        }\n        \n        // 6方向すべて隣接されていたらnullを返す\n        if (ignoreFaces.length ===  6) return null;\n\n        // 頂点データ\n        var voxVertices = voxVerticesSource.map(function(voxel) {\n            return new THREE.Vector3(voxel.x * this.voxelSize * 0.5, voxel.y * this.voxelSize * 0.5, voxel.z * this.voxelSize * 0.5);\n        }.bind(this));\n\n        // 面データ\n        var voxFaces = voxFacesSource.map(function(f) {\n            return {\n                faceA: new THREE.Face3(f.faceA.a, f.faceA.b, f.faceA.c),\n                faceB: new THREE.Face3(f.faceB.a, f.faceB.b, f.faceB.c),\n            };\n        });\n        \n        // 頂点色\n        if (this.vertexColor) {\n            var c = this.voxelData.palette[voxel.colorIndex];\n            var color = new THREE.Color(c.r / 255, c.g / 255, c.b / 255);\n        }\n\n        var vox = new THREE.Geometry();\n        vox.faceVertexUvs[0] = [];\n        \n        // 面を作る\n        voxFaces.forEach(function(faces, i) {\n            if (ignoreFaces.indexOf(i) >= 0) return;\n            \n            if (this.vertexColor) {\n                faces.faceA.color = color;\n                faces.faceB.color = color;\n            } else {\n                var uv = new THREE.Vector2((voxel.colorIndex + 0.5) / 256, 0.5);\n                vox.faceVertexUvs[0].push([uv, uv, uv], [uv, uv, uv]);\n            }\n            vox.faces.push(faces.faceA, faces.faceB);\n        }.bind(this));\n        \n        // 使っている頂点を抽出\n        var usingVertices = {};\n        vox.faces.forEach(function(face) {\n            usingVertices[face.a] = true;\n            usingVertices[face.b] = true;\n            usingVertices[face.c] = true;\n        });\n        \n        // 面の頂点インデックスを詰める処理\n        var splice = function(index) {\n            vox.faces.forEach(function(face) {\n                if (face.a > index) face.a -= 1;\n                if (face.b > index) face.b -= 1;\n                if (face.c > index) face.c -= 1;\n            });\n        };\n\n        // 使っている頂点のみ追加する\n        var j = 0;\n        voxVertices.forEach(function(vertex, i) {\n            if (usingVertices[i]) {\n                vox.vertices.push(vertex);\n            } else {\n                splice(i - j);\n                j += 1;\n            }\n        });\n        \n        return vox;\n    };\n\n    /**\n     * @return {THREE.Mesh}\n     */\n    vox.MeshBuilder.prototype.createMesh = function() {\n        return new THREE.Mesh(this.geometry, this.material);\n    };\n    \n    /**\n     * 外側に面したボクセルか\n     * @return {boolean}\n     */\n    vox.MeshBuilder.prototype.isOuterVoxel = function(voxel) {\n        return six.filter(function(s) {\n            return this.hashTable.has(voxel.x + s.x, voxel.y + s.y, voxel.z + s.z);\n        }.bind(this)).length < 6;\n    };\n\n    /**\n     * @static\n     * @type {vox.TextureFactory}\n     */\n    vox.MeshBuilder.textureFactory = null;\n\n    // 隣接方向と無視する面の対応表\n    var six = [\n        { x: -1, y: 0, z: 0, ignoreFace: 0 },\n        { x:  1, y: 0, z: 0, ignoreFace: 1 },\n        { x:  0, y:-1, z: 0, ignoreFace: 5 },\n        { x:  0, y: 1, z: 0, ignoreFace: 4 },\n        { x:  0, y: 0, z:-1, ignoreFace: 2 },\n        { x:  0, y: 0, z: 1, ignoreFace: 3 },\n    ];\n\n    // 頂点データソース\n    var voxVerticesSource = [\n        { x: -1, y: 1, z:-1 },\n        { x:  1, y: 1, z:-1 },\n        { x: -1, y: 1, z: 1 },\n        { x:  1, y: 1, z: 1 },\n        { x: -1, y:-1, z:-1 },\n        { x:  1, y:-1, z:-1 },\n        { x: -1, y:-1, z: 1 },\n        { x:  1, y:-1, z: 1 },\n    ];\n\n    // 面データソース\n    var voxFacesSource = [\n        { faceA: { a:6, b:2, c:0 }, faceB: { a:6, b:0, c:4 } },\n        { faceA: { a:5, b:1, c:3 }, faceB: { a:5, b:3, c:7 } },\n        { faceA: { a:5, b:7, c:6 }, faceB: { a:5, b:6, c:4 } },\n        { faceA: { a:2, b:3, c:1 }, faceB: { a:2, b:1, c:0 } },\n        { faceA: { a:4, b:0, c:1 }, faceB: { a:4, b:1, c:5 } },\n        { faceA: { a:7, b:3, c:2 }, faceB: { a:7, b:2, c:6 } },\n    ];\n\n    var hash = function(x, y, z) {\n        return \"x\" + x + \"y\" + y + \"z\" + z;\n    };\n\n    var createHashTable = function(voxels) {\n        var hashTable = {};\n        voxels.forEach(function(v) {\n            hashTable[hash(v.x, v.y, v.z)] = true;\n        });\n        \n        hashTable.has = function(x, y, z) {\n            return hash(x, y, z) in this;\n        }\n        return hashTable;\n    };\n\n})();\n\n(function() {\n    /**\n     * @constructor\n     */\n    vox.TextureFactory = function() {};\n\n    /**\n     * @param {vox.VoxelData} voxelData\n     * @return {HTMLCanvasElement}\n     */\n    vox.TextureFactory.prototype.createCanvas = function(voxelData) {\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = 256;\n        canvas.height= 1;\n        var context = canvas.getContext(\"2d\");\n        for (var i = 0, len = voxelData.palette.length; i < len; i++) {\n            var p = voxelData.palette[i];\n            context.fillStyle = \"rgb(\" + p.r + \",\" + p.g + \",\" + p.b + \")\";\n            context.fillRect(i * 1, 0, 1, 1);\n        }\n        \n        return canvas;\n    };\n    \n    /**\n     * パレット情報を元に作成したテクスチャを返す.\n     * 生成されたテクスチャはキャッシュされ、同一のパレットからは同じテクスチャオブジェクトが返される.\n     * @param {vox.VoxelData} voxelData\n     * @return {THREE.Texture}\n     */\n    vox.TextureFactory.prototype.getTexture = function(voxelData) {\n        var palette = voxelData.palette;\n        var hashCode = getHashCode(palette);\n        if (hashCode in cache) {\n            // console.log(\"cache hit\");\n            return cache[hashCode];\n        }\n        \n        var canvas = this.createCanvas(voxelData);\n        var texture = new THREE.Texture(canvas);\n        texture.needsUpdate = true;\n        \n        cache[hashCode] = texture;\n        \n        return texture;\n    };\n    \n    var cache = {};\n    \n    var getHashCode = function(palette) {\n        var str = \"\";\n        for (var i = 0; i < 256; i++) {\n            var p = palette[i];\n            str += hex(p.r);\n            str += hex(p.g);\n            str += hex(p.b);\n            str += hex(p.a);\n        }\n        return vox.md5(str);\n    };\n    var hex = function(num) {\n        var r = num.toString(16);\n        return (r.length === 1) ? \"0\" + r : r;\n    };\n\n})();\n\n(function() {\n\n    /**\n     * MagicaVoxelのデフォルトパレット\n     * @static\n     */    \n    vox.defaultPalette = [\n        {r:255,g:255,b:255,a:255},\n        {r:255,g:255,b:255,a:255},\n        {r:255,g:255,b:204,a:255},\n        {r:255,g:255,b:153,a:255},\n        {r:255,g:255,b:102,a:255},\n        {r:255,g:255,b:51,a:255},\n        {r:255,g:255,b:0,a:255},\n        {r:255,g:204,b:255,a:255},\n        {r:255,g:204,b:204,a:255},\n        {r:255,g:204,b:153,a:255},\n        {r:255,g:204,b:102,a:255},\n        {r:255,g:204,b:51,a:255},\n        {r:255,g:204,b:0,a:255},\n        {r:255,g:153,b:255,a:255},\n        {r:255,g:153,b:204,a:255},\n        {r:255,g:153,b:153,a:255},\n        {r:255,g:153,b:102,a:255},\n        {r:255,g:153,b:51,a:255},\n        {r:255,g:153,b:0,a:255},\n        {r:255,g:102,b:255,a:255},\n        {r:255,g:102,b:204,a:255},\n        {r:255,g:102,b:153,a:255},\n        {r:255,g:102,b:102,a:255},\n        {r:255,g:102,b:51,a:255},\n        {r:255,g:102,b:0,a:255},\n        {r:255,g:51,b:255,a:255},\n        {r:255,g:51,b:204,a:255},\n        {r:255,g:51,b:153,a:255},\n        {r:255,g:51,b:102,a:255},\n        {r:255,g:51,b:51,a:255},\n        {r:255,g:51,b:0,a:255},\n        {r:255,g:0,b:255,a:255},\n        {r:255,g:0,b:204,a:255},\n        {r:255,g:0,b:153,a:255},\n        {r:255,g:0,b:102,a:255},\n        {r:255,g:0,b:51,a:255},\n        {r:255,g:0,b:0,a:255},\n        {r:204,g:255,b:255,a:255},\n        {r:204,g:255,b:204,a:255},\n        {r:204,g:255,b:153,a:255},\n        {r:204,g:255,b:102,a:255},\n        {r:204,g:255,b:51,a:255},\n        {r:204,g:255,b:0,a:255},\n        {r:204,g:204,b:255,a:255},\n        {r:204,g:204,b:204,a:255},\n        {r:204,g:204,b:153,a:255},\n        {r:204,g:204,b:102,a:255},\n        {r:204,g:204,b:51,a:255},\n        {r:204,g:204,b:0,a:255},\n        {r:204,g:153,b:255,a:255},\n        {r:204,g:153,b:204,a:255},\n        {r:204,g:153,b:153,a:255},\n        {r:204,g:153,b:102,a:255},\n        {r:204,g:153,b:51,a:255},\n        {r:204,g:153,b:0,a:255},\n        {r:204,g:102,b:255,a:255},\n        {r:204,g:102,b:204,a:255},\n        {r:204,g:102,b:153,a:255},\n        {r:204,g:102,b:102,a:255},\n        {r:204,g:102,b:51,a:255},\n        {r:204,g:102,b:0,a:255},\n        {r:204,g:51,b:255,a:255},\n        {r:204,g:51,b:204,a:255},\n        {r:204,g:51,b:153,a:255},\n        {r:204,g:51,b:102,a:255},\n        {r:204,g:51,b:51,a:255},\n        {r:204,g:51,b:0,a:255},\n        {r:204,g:0,b:255,a:255},\n        {r:204,g:0,b:204,a:255},\n        {r:204,g:0,b:153,a:255},\n        {r:204,g:0,b:102,a:255},\n        {r:204,g:0,b:51,a:255},\n        {r:204,g:0,b:0,a:255},\n        {r:153,g:255,b:255,a:255},\n        {r:153,g:255,b:204,a:255},\n        {r:153,g:255,b:153,a:255},\n        {r:153,g:255,b:102,a:255},\n        {r:153,g:255,b:51,a:255},\n        {r:153,g:255,b:0,a:255},\n        {r:153,g:204,b:255,a:255},\n        {r:153,g:204,b:204,a:255},\n        {r:153,g:204,b:153,a:255},\n        {r:153,g:204,b:102,a:255},\n        {r:153,g:204,b:51,a:255},\n        {r:153,g:204,b:0,a:255},\n        {r:153,g:153,b:255,a:255},\n        {r:153,g:153,b:204,a:255},\n        {r:153,g:153,b:153,a:255},\n        {r:153,g:153,b:102,a:255},\n        {r:153,g:153,b:51,a:255},\n        {r:153,g:153,b:0,a:255},\n        {r:153,g:102,b:255,a:255},\n        {r:153,g:102,b:204,a:255},\n        {r:153,g:102,b:153,a:255},\n        {r:153,g:102,b:102,a:255},\n        {r:153,g:102,b:51,a:255},\n        {r:153,g:102,b:0,a:255},\n        {r:153,g:51,b:255,a:255},\n        {r:153,g:51,b:204,a:255},\n        {r:153,g:51,b:153,a:255},\n        {r:153,g:51,b:102,a:255},\n        {r:153,g:51,b:51,a:255},\n        {r:153,g:51,b:0,a:255},\n        {r:153,g:0,b:255,a:255},\n        {r:153,g:0,b:204,a:255},\n        {r:153,g:0,b:153,a:255},\n        {r:153,g:0,b:102,a:255},\n        {r:153,g:0,b:51,a:255},\n        {r:153,g:0,b:0,a:255},\n        {r:102,g:255,b:255,a:255},\n        {r:102,g:255,b:204,a:255},\n        {r:102,g:255,b:153,a:255},\n        {r:102,g:255,b:102,a:255},\n        {r:102,g:255,b:51,a:255},\n        {r:102,g:255,b:0,a:255},\n        {r:102,g:204,b:255,a:255},\n        {r:102,g:204,b:204,a:255},\n        {r:102,g:204,b:153,a:255},\n        {r:102,g:204,b:102,a:255},\n        {r:102,g:204,b:51,a:255},\n        {r:102,g:204,b:0,a:255},\n        {r:102,g:153,b:255,a:255},\n        {r:102,g:153,b:204,a:255},\n        {r:102,g:153,b:153,a:255},\n        {r:102,g:153,b:102,a:255},\n        {r:102,g:153,b:51,a:255},\n        {r:102,g:153,b:0,a:255},\n        {r:102,g:102,b:255,a:255},\n        {r:102,g:102,b:204,a:255},\n        {r:102,g:102,b:153,a:255},\n        {r:102,g:102,b:102,a:255},\n        {r:102,g:102,b:51,a:255},\n        {r:102,g:102,b:0,a:255},\n        {r:102,g:51,b:255,a:255},\n        {r:102,g:51,b:204,a:255},\n        {r:102,g:51,b:153,a:255},\n        {r:102,g:51,b:102,a:255},\n        {r:102,g:51,b:51,a:255},\n        {r:102,g:51,b:0,a:255},\n        {r:102,g:0,b:255,a:255},\n        {r:102,g:0,b:204,a:255},\n        {r:102,g:0,b:153,a:255},\n        {r:102,g:0,b:102,a:255},\n        {r:102,g:0,b:51,a:255},\n        {r:102,g:0,b:0,a:255},\n        {r:51,g:255,b:255,a:255},\n        {r:51,g:255,b:204,a:255},\n        {r:51,g:255,b:153,a:255},\n        {r:51,g:255,b:102,a:255},\n        {r:51,g:255,b:51,a:255},\n        {r:51,g:255,b:0,a:255},\n        {r:51,g:204,b:255,a:255},\n        {r:51,g:204,b:204,a:255},\n        {r:51,g:204,b:153,a:255},\n        {r:51,g:204,b:102,a:255},\n        {r:51,g:204,b:51,a:255},\n        {r:51,g:204,b:0,a:255},\n        {r:51,g:153,b:255,a:255},\n        {r:51,g:153,b:204,a:255},\n        {r:51,g:153,b:153,a:255},\n        {r:51,g:153,b:102,a:255},\n        {r:51,g:153,b:51,a:255},\n        {r:51,g:153,b:0,a:255},\n        {r:51,g:102,b:255,a:255},\n        {r:51,g:102,b:204,a:255},\n        {r:51,g:102,b:153,a:255},\n        {r:51,g:102,b:102,a:255},\n        {r:51,g:102,b:51,a:255},\n        {r:51,g:102,b:0,a:255},\n        {r:51,g:51,b:255,a:255},\n        {r:51,g:51,b:204,a:255},\n        {r:51,g:51,b:153,a:255},\n        {r:51,g:51,b:102,a:255},\n        {r:51,g:51,b:51,a:255},\n        {r:51,g:51,b:0,a:255},\n        {r:51,g:0,b:255,a:255},\n        {r:51,g:0,b:204,a:255},\n        {r:51,g:0,b:153,a:255},\n        {r:51,g:0,b:102,a:255},\n        {r:51,g:0,b:51,a:255},\n        {r:51,g:0,b:0,a:255},\n        {r:0,g:255,b:255,a:255},\n        {r:0,g:255,b:204,a:255},\n        {r:0,g:255,b:153,a:255},\n        {r:0,g:255,b:102,a:255},\n        {r:0,g:255,b:51,a:255},\n        {r:0,g:255,b:0,a:255},\n        {r:0,g:204,b:255,a:255},\n        {r:0,g:204,b:204,a:255},\n        {r:0,g:204,b:153,a:255},\n        {r:0,g:204,b:102,a:255},\n        {r:0,g:204,b:51,a:255},\n        {r:0,g:204,b:0,a:255},\n        {r:0,g:153,b:255,a:255},\n        {r:0,g:153,b:204,a:255},\n        {r:0,g:153,b:153,a:255},\n        {r:0,g:153,b:102,a:255},\n        {r:0,g:153,b:51,a:255},\n        {r:0,g:153,b:0,a:255},\n        {r:0,g:102,b:255,a:255},\n        {r:0,g:102,b:204,a:255},\n        {r:0,g:102,b:153,a:255},\n        {r:0,g:102,b:102,a:255},\n        {r:0,g:102,b:51,a:255},\n        {r:0,g:102,b:0,a:255},\n        {r:0,g:51,b:255,a:255},\n        {r:0,g:51,b:204,a:255},\n        {r:0,g:51,b:153,a:255},\n        {r:0,g:51,b:102,a:255},\n        {r:0,g:51,b:51,a:255},\n        {r:0,g:51,b:0,a:255},\n        {r:0,g:0,b:255,a:255},\n        {r:0,g:0,b:204,a:255},\n        {r:0,g:0,b:153,a:255},\n        {r:0,g:0,b:102,a:255},\n        {r:0,g:0,b:51,a:255},\n        {r:238,g:0,b:0,a:255},\n        {r:221,g:0,b:0,a:255},\n        {r:187,g:0,b:0,a:255},\n        {r:170,g:0,b:0,a:255},\n        {r:136,g:0,b:0,a:255},\n        {r:119,g:0,b:0,a:255},\n        {r:85,g:0,b:0,a:255},\n        {r:68,g:0,b:0,a:255},\n        {r:34,g:0,b:0,a:255},\n        {r:17,g:0,b:0,a:255},\n        {r:0,g:238,b:0,a:255},\n        {r:0,g:221,b:0,a:255},\n        {r:0,g:187,b:0,a:255},\n        {r:0,g:170,b:0,a:255},\n        {r:0,g:136,b:0,a:255},\n        {r:0,g:119,b:0,a:255},\n        {r:0,g:85,b:0,a:255},\n        {r:0,g:68,b:0,a:255},\n        {r:0,g:34,b:0,a:255},\n        {r:0,g:17,b:0,a:255},\n        {r:0,g:0,b:238,a:255},\n        {r:0,g:0,b:221,a:255},\n        {r:0,g:0,b:187,a:255},\n        {r:0,g:0,b:170,a:255},\n        {r:0,g:0,b:136,a:255},\n        {r:0,g:0,b:119,a:255},\n        {r:0,g:0,b:85,a:255},\n        {r:0,g:0,b:68,a:255},\n        {r:0,g:0,b:34,a:255},\n        {r:0,g:0,b:17,a:255},\n\n        {r:238,g:238,b:238,a:255},\n\n        {r:221,g:221,b:221,a:255},\n        {r:187,g:187,b:187,a:255},\n        {r:170,g:170,b:170,a:255},\n        {r:136,g:136,b:136,a:255},\n        {r:119,g:119,b:119,a:255},\n        {r:85,g:85,b:85,a:255},\n        {r:68,g:68,b:68,a:255},\n        {r:34,g:34,b:34,a:255},\n        {r:17,g:17,b:17,a:255},\n        // {r:0,g:0,b:0,a:255},\n    ];\n    \n})();\n\n(function() {\n\n\n\n/* md5.js - MD5 Message-Digest\n * Copyright (C) 1999,2002 Masanao Izumo <iz@onicos.co.jp>\n * Version: 2.0.0\n * LastModified: May 13 2002\n *\n * This program is free software.  You can redistribute it and/or modify\n * it without any warranty.  This library calculates the MD5 based on RFC1321.\n * See RFC1321 for more information and algorism.\n */\n\n/* Interface:\n * md5_128bits = MD5_hash(data);\n * md5_hexstr = MD5_hexhash(data);\n */\n\n/* ChangeLog\n * 2002/05/13: Version 2.0.0 released\n * NOTICE: API is changed.\n * 2002/04/15: Bug fix about MD5 length.\n */\n\n\n//    md5_T[i] = parseInt(Math.abs(Math.sin(i)) * 4294967296.0);\nvar MD5_T = new Array(0x00000000, 0xd76aa478, 0xe8c7b756, 0x242070db,\n              0xc1bdceee, 0xf57c0faf, 0x4787c62a, 0xa8304613,\n              0xfd469501, 0x698098d8, 0x8b44f7af, 0xffff5bb1,\n              0x895cd7be, 0x6b901122, 0xfd987193, 0xa679438e,\n              0x49b40821, 0xf61e2562, 0xc040b340, 0x265e5a51,\n              0xe9b6c7aa, 0xd62f105d, 0x02441453, 0xd8a1e681,\n              0xe7d3fbc8, 0x21e1cde6, 0xc33707d6, 0xf4d50d87,\n              0x455a14ed, 0xa9e3e905, 0xfcefa3f8, 0x676f02d9,\n              0x8d2a4c8a, 0xfffa3942, 0x8771f681, 0x6d9d6122,\n              0xfde5380c, 0xa4beea44, 0x4bdecfa9, 0xf6bb4b60,\n              0xbebfbc70, 0x289b7ec6, 0xeaa127fa, 0xd4ef3085,\n              0x04881d05, 0xd9d4d039, 0xe6db99e5, 0x1fa27cf8,\n              0xc4ac5665, 0xf4292244, 0x432aff97, 0xab9423a7,\n              0xfc93a039, 0x655b59c3, 0x8f0ccc92, 0xffeff47d,\n              0x85845dd1, 0x6fa87e4f, 0xfe2ce6e0, 0xa3014314,\n              0x4e0811a1, 0xf7537e82, 0xbd3af235, 0x2ad7d2bb,\n              0xeb86d391);\n\nvar MD5_round1 = new Array(new Array( 0, 7, 1), new Array( 1,12, 2),\n               new Array( 2,17, 3), new Array( 3,22, 4),\n               new Array( 4, 7, 5), new Array( 5,12, 6),\n               new Array( 6,17, 7), new Array( 7,22, 8),\n               new Array( 8, 7, 9), new Array( 9,12,10),\n               new Array(10,17,11), new Array(11,22,12),\n               new Array(12, 7,13), new Array(13,12,14),\n               new Array(14,17,15), new Array(15,22,16));\n\nvar MD5_round2 = new Array(new Array( 1, 5,17), new Array( 6, 9,18),\n               new Array(11,14,19), new Array( 0,20,20),\n               new Array( 5, 5,21), new Array(10, 9,22),\n               new Array(15,14,23), new Array( 4,20,24),\n               new Array( 9, 5,25), new Array(14, 9,26),\n               new Array( 3,14,27), new Array( 8,20,28),\n               new Array(13, 5,29), new Array( 2, 9,30),\n               new Array( 7,14,31), new Array(12,20,32));\n\nvar MD5_round3 = new Array(new Array( 5, 4,33), new Array( 8,11,34),\n               new Array(11,16,35), new Array(14,23,36),\n               new Array( 1, 4,37), new Array( 4,11,38),\n               new Array( 7,16,39), new Array(10,23,40),\n               new Array(13, 4,41), new Array( 0,11,42),\n               new Array( 3,16,43), new Array( 6,23,44),\n               new Array( 9, 4,45), new Array(12,11,46),\n               new Array(15,16,47), new Array( 2,23,48));\n\nvar MD5_round4 = new Array(new Array( 0, 6,49), new Array( 7,10,50),\n               new Array(14,15,51), new Array( 5,21,52),\n               new Array(12, 6,53), new Array( 3,10,54),\n               new Array(10,15,55), new Array( 1,21,56),\n               new Array( 8, 6,57), new Array(15,10,58),\n               new Array( 6,15,59), new Array(13,21,60),\n               new Array( 4, 6,61), new Array(11,10,62),\n               new Array( 2,15,63), new Array( 9,21,64));\n\nfunction MD5_F(x, y, z) { return (x & y) | (~x & z); }\nfunction MD5_G(x, y, z) { return (x & z) | (y & ~z); }\nfunction MD5_H(x, y, z) { return x ^ y ^ z;          }\nfunction MD5_I(x, y, z) { return y ^ (x | ~z);       }\n\nvar MD5_round = new Array(new Array(MD5_F, MD5_round1),\n              new Array(MD5_G, MD5_round2),\n              new Array(MD5_H, MD5_round3),\n              new Array(MD5_I, MD5_round4));\n\nfunction MD5_pack(n32) {\n  return String.fromCharCode(n32 & 0xff) +\n     String.fromCharCode((n32 >>> 8) & 0xff) +\n     String.fromCharCode((n32 >>> 16) & 0xff) +\n     String.fromCharCode((n32 >>> 24) & 0xff);\n}\n\nfunction MD5_unpack(s4) {\n  return  s4.charCodeAt(0)        |\n     (s4.charCodeAt(1) <<  8) |\n     (s4.charCodeAt(2) << 16) |\n     (s4.charCodeAt(3) << 24);\n}\n\nfunction MD5_number(n) {\n  while (n < 0)\n    n += 4294967296;\n  while (n > 4294967295)\n    n -= 4294967296;\n  return n;\n}\n\nfunction MD5_apply_round(x, s, f, abcd, r) {\n  var a, b, c, d;\n  var kk, ss, ii;\n  var t, u;\n\n  a = abcd[0];\n  b = abcd[1];\n  c = abcd[2];\n  d = abcd[3];\n  kk = r[0];\n  ss = r[1];\n  ii = r[2];\n\n  u = f(s[b], s[c], s[d]);\n  t = s[a] + u + x[kk] + MD5_T[ii];\n  t = MD5_number(t);\n  t = ((t<<ss) | (t>>>(32-ss)));\n  t += s[b];\n  s[a] = MD5_number(t);\n}\n\nfunction MD5_hash(data) {\n  var abcd, x, state, s;\n  var len, index, padLen, f, r;\n  var i, j, k;\n  var tmp;\n\n  state = new Array(0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476);\n  len = data.length;\n  index = len & 0x3f;\n  padLen = (index < 56) ? (56 - index) : (120 - index);\n  if(padLen > 0) {\n    data += \"\\x80\";\n    for(i = 0; i < padLen - 1; i++)\n      data += \"\\x00\";\n  }\n  data += MD5_pack(len * 8);\n  data += MD5_pack(0);\n  len  += padLen + 8;\n  abcd = new Array(0, 1, 2, 3);\n  x    = new Array(16);\n  s    = new Array(4);\n\n  for(k = 0; k < len; k += 64) {\n    for(i = 0, j = k; i < 16; i++, j += 4) {\n      x[i] = data.charCodeAt(j) |\n        (data.charCodeAt(j + 1) <<  8) |\n        (data.charCodeAt(j + 2) << 16) |\n        (data.charCodeAt(j + 3) << 24);\n    }\n    for(i = 0; i < 4; i++)\n      s[i] = state[i];\n    for(i = 0; i < 4; i++) {\n      f = MD5_round[i][0];\n      r = MD5_round[i][1];\n      for(j = 0; j < 16; j++) {\n    MD5_apply_round(x, s, f, abcd, r[j]);\n    tmp = abcd[0];\n    abcd[0] = abcd[3];\n    abcd[3] = abcd[2];\n    abcd[2] = abcd[1];\n    abcd[1] = tmp;\n      }\n    }\n\n    for(i = 0; i < 4; i++) {\n      state[i] += s[i];\n      state[i] = MD5_number(state[i]);\n    }\n  }\n\n  return MD5_pack(state[0]) +\n     MD5_pack(state[1]) +\n     MD5_pack(state[2]) +\n     MD5_pack(state[3]);\n}\n\nfunction MD5_hexhash(data) {\n    var i, out, c;\n    var bit128;\n\n    bit128 = MD5_hash(data);\n    out = \"\";\n    for(i = 0; i < 16; i++) {\n    c = bit128.charCodeAt(i);\n    out += \"0123456789abcdef\".charAt((c>>4) & 0xf);\n    out += \"0123456789abcdef\".charAt(c & 0xf);\n    }\n    return out;\n}\n\n\n\nvox.md5 = MD5_hexhash;\n})();\n","'use strict';\r\nimport { Node } from './scene.js';\r\nimport { mat4, mat3,vec3, vec4 } from './gl-matrix/gl-matrix.js';\r\nimport vox from './vox.js';\r\n\r\n\r\nconst vertexShader = `#version 300 es\r\nprecision highp float;\r\nprecision highp int;\r\n\r\n#define d(b,x,y,z) \\\r\nif((face & b) > 0u){ \\\r\nvec3 f = u_rotate * vec3(x,y,z); \\\r\nfloat e = dot(f,u_eye); \\\r\nif(e >  eye_dot){ \\\r\n  eye_dot = e; \\\r\n  diffuse = dot(f,u_light); \\\r\n} \\\r\n}\r\n\r\n/**********************************************\r\n\r\nVox オブジェクトの表示\r\n(なんちゃって3D)\r\n\r\n**********************************************/\r\n\r\n\r\n// 座標 X,Y,Z\r\nlayout(location = 0) in vec3 position;\r\n// カラーと面情報\r\nlayout(location = 1) in uint point_attrib;\r\n\r\n// フラグメント・シェーダーに渡す変数\r\nflat out uint v_color_index;// 色 インデックス\r\nflat out uint v_pallete_index;\r\nflat out float v_diffuse;//  \r\nflat out vec3 v_ambient;\r\nflat out float v_alpha;\r\n\r\n#define root2 1.414213562\r\n\r\nuniform uint u_attrib;\r\nuniform float u_scale;\r\nuniform mat3 u_rotate;\r\nuniform vec3 u_obj_position;\r\nuniform mat4 u_worldViewProjection; // 変換行列\r\nuniform vec3 u_eye;\r\nuniform vec3 u_light;\r\nuniform vec3 u_ambient;\r\n\r\n\r\nvoid main() {\r\n  \r\n  uint face = (point_attrib & 0xffff0000u) >> 16u;\r\n\r\n  // 表示位置の計算\r\n  vec4 pos = u_worldViewProjection * vec4( u_rotate * position * u_scale + u_obj_position ,1.0) ;\r\n  //vec4 pos = u_worldViewProjection * vec4(  position  ,1.0) ;\r\n  \r\n  // ライティング用のベクトルを作る\r\n  float diffuse;\r\n  float eye_dot;\r\n  \r\n  d(0x1u,-1.,0.,0.);\r\n  d(0x2u,1.,0.,0.);\r\n  d(0x4u,0.,-1.,0.);\r\n  d(0x8u,0.,1.,0.);\r\n  d(0x10u,0.,0.,-1.);\r\n  d(0x20u,0.,0.,1.);\r\n\r\n  v_diffuse = clamp(diffuse * ((256. - pos.z) / 256.0), 0.0, 1.0);\r\n \r\n  v_color_index  = point_attrib & 0xffu;\r\n  v_pallete_index = u_attrib & 0x1ffu;\r\n \r\n  v_ambient = u_ambient;\r\n  v_alpha = float((u_attrib & 0x3fc00u) >> 10u) / 255.0;\r\n\r\n  gl_Position = pos;\r\n  // セルサイズの計算（今のところかなりいい加減。。）\r\n  gl_PointSize = clamp((160.0 / pos.z) * u_scale * root2,0.0,128.0);\r\n}\r\n`;\r\n\r\nconst fragmentShader = `#version 300 es\r\nprecision highp float;\r\nprecision highp int;\r\n\r\n\r\n// 頂点シェーダーからの情報\r\nflat in uint v_color_index;// 色\r\nflat in uint v_pallete_index;// 色\r\nflat in float v_diffuse;\r\nflat in vec3 v_ambient;\r\nflat in float v_alpha;\r\n\r\nuniform sampler2D u_pallete; \r\n\r\n#define root2 1.414213562\r\n\r\n// 出力色\r\nout vec4 fcolor;\r\n\r\nvoid main() {\r\n  vec4 color = texelFetch(u_pallete,ivec2(int(v_color_index),int(v_pallete_index)),0) ;\r\n  color = vec4(color.rgb * v_diffuse,color.a);\r\n  color = clamp(color + vec4(v_ambient,0.),0.0,1.0);\r\n  fcolor = vec4(color.rgb, color.a * v_alpha);\r\n}\r\n`;\r\n\r\n// プログラムを使いまわすためのキャッシュ\r\nlet programCache;\r\n\r\n// エンディアンを調べる関数\r\nfunction checkEndian(buffer = new ArrayBuffer(2)) {\r\n\r\n  if (buffer.byteLength == 1) return false;\r\n\r\n  const ua = new Uint16Array(buffer);\r\n  const v = new DataView(buffer);\r\n  v.setUint16(0, 1);\r\n  // ArrayBufferとDataViewの読み出し結果が異なればリトル・エンディアンである\r\n  if (ua[0] != v.getUint16()) {\r\n    ua[0] = 0;\r\n    return true;\r\n  }\r\n  ua[0] = 0;\r\n  // ビッグ・エンディアン\r\n  return false;\r\n}\r\n\r\n// const voxCharacters = [];\r\n\r\nfunction sign(x){\r\n  return x == 0 ? 0 : ( x > 0 ? 1 : -1);\r\n}\r\n\r\nconst faces = [\r\n  {x:-1,y:0,z:0,face:1},\r\n  {x:1,y:0,z:0,face:2},\r\n  {x:0,y:-1,z:0,face:4},\r\n  {x:0,y:1,z:0,face:8},\r\n  {x:0,y:0,z:-1,face:16},\r\n  {x:0,y:0,z:1,face:32}\r\n];\r\n\r\n\r\nexport class VoxelModel {\r\n  constructor(voxelData){\r\n   \r\n    const points = [];\r\n    const voxelMap = new Map();\r\n    voxelData.voxels.forEach(d=>{\r\n      let p = vec3.create();\r\n      p[0] = d.x - (voxelData.size.x >> 1);\r\n      p[1] = d.y - (voxelData.size.y >> 1);\r\n      p[2] = d.z - (voxelData.size.z >> 1);\r\n      \r\n      let s = vec3.clone(p);\r\n      vec3.set(s,sign(s[0]),sign(s[1]),sign(s[2]));\r\n      voxelMap.set('x' + p[0] + 'y' + p[1] + 'z' + p[2] , true );\r\n      points.push({point:p,sign:s,color: d.colorIndex});\r\n    });\r\n\r\n    this.points = [];\r\n\r\n    for(const p of points){\r\n     const openFaces = faces.filter(d=>{\r\n        return !voxelMap.get('x' + (p.point[0] + d.x) + 'y' + (p.point[1] + d.y) + 'z' + (p.point[2] + d.z));\r\n      });\r\n\r\n      // 見えないボクセルはスキップする\r\n      if(openFaces.length == 0){\r\n        continue;\r\n      }\r\n      // \r\n      let openFlag = openFaces.reduce((a,v)=>a|v.face,0);\r\n      p.openFlag = openFlag;\r\n      p.openFaces = openFaces;\r\n      this.points.push(p);\r\n    }\r\n\r\n    const colorPallete = [];\r\n\r\n    for(const color of voxelData.palette)\r\n    {\r\n      colorPallete.push(color.r);\r\n      colorPallete.push(color.g);\r\n      colorPallete.push(color.b);\r\n      colorPallete.push(color.a);\r\n    }\r\n    // colorPallete[0] = 0;\r\n    // colorPallete[1] = 0;\r\n    // colorPallete[2] = 0;\r\n    // colorPallete[3] = 0;\r\n\r\n    this.colorPallete = new Uint8Array(colorPallete);\r\n    this.voxCount = this.points.length;\r\n    this.voxByteCount = this.voxCount * this.POINT_DATA_SIZE;\r\n    this.endian = checkEndian();\r\n  }\r\n\r\n  setBuffer(offset,dv)\r\n  {\r\n    for(const p of this.points){\r\n      dv.setFloat32(offset,p.point[0] ,this.endian);\r\n      dv.setFloat32(offset + 4, p.point[1],this.endian);\r\n      dv.setFloat32(offset + 8, p.point[2],this.endian);\r\n      dv.setUint32(offset + 12,p.color | (p.openFlag << 16),this.endian);\r\n      offset += 16;\r\n    }\r\n    return offset;\r\n  }\r\n\r\n  static async loadFromUrls(voxelUrls){\r\n    const voxelModels = {};\r\n    const parser = new vox.Parser();\r\n    const models = [];\r\n    let bufferLength = 0;\r\n    for(const url of voxelUrls){\r\n      const data = await parser.parse(url);\r\n      const voxelModel = new VoxelModel(data);\r\n      models.push(voxelModel);\r\n      bufferLength += voxelModel.voxByteCount;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(bufferLength);\r\n    const dv = new DataView(buffer);\r\n    const palletes = new Uint8Array(256 /* pallete */ * 4 /* rgba */ * models.length );\r\n    let offset = 0,poffset = 0,vindex = 0;\r\n\r\n    voxelModels.modelInfos = [];\r\n    voxelModels.palletes = palletes;\r\n    voxelModels.buffer = buffer;\r\n\r\n\r\n    for(let i = 0;i < models.length;++i){\r\n      const data = models[i];\r\n      voxelModels.modelInfos.push(\r\n        {\r\n          index:i,\r\n          vindex:vindex,\r\n          count:data.voxCount\r\n        }\r\n      );\r\n      offset = data.setBuffer(offset,dv);\r\n      vindex += data.voxCount;\r\n      for(let pi = 0;pi < data.colorPallete.length;++pi){\r\n        palletes[poffset++] = data.colorPallete[pi];\r\n      }\r\n    }\r\n    return voxelModels;\r\n  }\r\n}\r\n\r\nVoxelModel.prototype.POINT_DATA_SIZE = 4 * 4;\r\n\r\nconst SIZE_PARAM = 4;\r\nconst VOX_OBJ_POS = 0;\r\nconst VOX_OBJ_POS_SIZE = 3 * SIZE_PARAM; // vec3\r\nconst VOX_OBJ_SCALE = VOX_OBJ_POS + VOX_OBJ_POS_SIZE;\r\nconst VOX_OBJ_SCALE_SIZE = SIZE_PARAM; // float\r\nconst VOX_OBJ_AXIS = VOX_OBJ_SCALE + VOX_OBJ_SCALE_SIZE;\r\nconst VOX_OBJ_AXIS_SIZE = SIZE_PARAM * 3; // vec3\r\nconst VOX_OBJ_ANGLE = VOX_OBJ_AXIS + VOX_OBJ_AXIS_SIZE;\r\nconst VOX_OBJ_ANGLE_SIZE = SIZE_PARAM * 1; // float\r\nconst VOX_OBJ_ATTRIB = VOX_OBJ_ANGLE+ VOX_OBJ_ANGLE_SIZE;\r\nconst VOX_OBJ_ATTRIB_SIZE = SIZE_PARAM; // uint\r\n// アトリビュートのビット構成\r\n// v00n nnnn nnnn 00aa aaaa aadc cccc cccc\r\n// v: 1 ... 表示 0 ... 非表示\r\n// n: object No (0-511)\r\n// a: alpha (0-255)\r\n// c: color pallet index (0-511)\r\n// d: use default pallet;\r\nconst VOX_MEMORY_STRIDE =  (VOX_OBJ_POS_SIZE + VOX_OBJ_SCALE_SIZE + VOX_OBJ_AXIS_SIZE + VOX_OBJ_ANGLE_SIZE + VOX_OBJ_ATTRIB_SIZE);\r\nconst VOX_OBJ_MAX = 64;\r\n\r\nconst parser = new vox.Parser();\r\nexport async function loadVox(path){\r\n  const models = await parser.parse(path);\r\n  return models;\r\n}\r\n\r\nfunction setRotate(mat3 ,angle,  axis){\r\n\r\n  const s = Math.sin(angle);\r\n  const c = Math.cos(angle);\r\n  const r = 1.0 - c;\r\n\r\n  mat3[0] = axis[0] * axis[0] * r + c; \r\n  mat3[1] = axis[1] * axis[0] * r + axis[2] * s;\r\n  mat3[2] = axis[2] * axis[0] * r - axis[1] * s;\r\n  mat3[3] = axis[0] * axis[1] * r - axis[2] * s;\r\n  mat3[4] = axis[1] * axis[1] * r + c;\r\n  mat3[5] = axis[2] * axis[1] * r + axis[0] * s;\r\n  mat3[6] = axis[0] * axis[2] * r + axis[1] * s;\r\n  mat3[7] = axis[1] * axis[2] * r - axis[0] * s;\r\n  mat3[8] = axis[2] * axis[2] * r + c;\r\n  return mat3;\r\n}\r\n\r\n\r\nexport class Vox extends Node {\r\n  constructor({ gl2, voxelModels,visible = true,memory,offset}) {\r\n    super();\r\n    // webgl コンテキストの保存\r\n    const gl = this.gl = gl2.gl;\r\n    this.gl2 = gl2;\r\n\r\n    //let points = new DataView(new ArrayBuffer(4 * 4 * data.voxels.length));\r\n    this.endian = checkEndian();\r\n    this.voxScreenMemory = new DataView(memory,offset,this.MEMORY_SIZE_NEEDED);\r\n    //his.voxScreenBuffer = new Uint8Array(memory,offset,this.MEMORY_SIZE_NEEDED);\r\n    this.voxelModels = voxelModels;\r\n    this.voxelBuffer = this.voxelModels.buffer;\r\n      \r\n    // スプライト面の表示・非表示\r\n    this.visible = visible;\r\n\r\n\r\n    // プログラムの生成\r\n    if (!programCache) {\r\n      programCache = gl2.createProgram(vertexShader, fragmentShader);\r\n    }\r\n    const program = this.program = programCache;\r\n\r\n    // アトリビュート\r\n    // VAOの生成とバインド\r\n    this.vao = gl.createVertexArray();\r\n    gl.bindVertexArray(this.vao);\r\n    // VBOの生成\r\n    this.buffer = gl.createBuffer();\r\n\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\r\n    // VBOにスプライトバッファの内容を転送\r\n    gl.bufferData(gl.ARRAY_BUFFER, this.voxelBuffer, gl.DYNAMIC_DRAW);\r\n\r\n    // 属性ロケーションIDの取得と保存\r\n    this.positionLocation = 0;\r\n    this.pointAttribLocation = 1;\r\n\r\n    this.stride = 16;\r\n\r\n    // 属性の有効化とシェーダー属性とバッファ位置の結び付け\r\n    // 位置\r\n    gl.enableVertexAttribArray(this.positionLocation);\r\n    gl.vertexAttribPointer(this.positionLocation, 3, gl.FLOAT, true, this.stride, 0);\r\n    \r\n    // 属性\r\n    gl.enableVertexAttribArray(this.pointAttribLocation);\r\n    gl.vertexAttribIPointer(this.pointAttribLocation, 1, gl.UNSIGNED_INT, this.stride, 12);\r\n\r\n    gl.bindVertexArray(null);\r\n\r\n    // uniform変数の位置の取得と保存\r\n\r\n    // UBO\r\n    // this.objAttrLocation = gl.getUniformBlockIndex(program,'obj_attributes');\r\n    // gl.uniformBlockBinding(program,this.objAttrLocation,0);\r\n    // this.objAttrBuffer = gl.createBuffer();\r\n    // gl.bindBuffer(gl.UNIFORM_BUFFER, this.objAttrBuffer);\r\n    // gl.bufferData(gl.UNIFORM_BUFFER,VOX_MEMORY_STRIDE,gl.DYNAMIC_DRAW);\r\n    // //gl.bufferData(gl.UNIFORM_BUFFER, this.voxScreenMemory.buffer, gl.DYNAMIC_DRAW,0,VOX_MEMORY_STRIDE);\r\n    // gl.bindBuffer(gl.UNIFORM_BUFFER, null);\r\n    // gl.bindBufferBase(gl.UNIFORM_BUFFER,0,this.objAttrBuffer);\r\n\r\n    // \r\n    this.attribLocation = gl.getUniformLocation(program,'u_attrib');\r\n    this.scaleLocation = gl.getUniformLocation(program,'u_scale');\r\n    this.rotateLocation = gl.getUniformLocation(program,'u_rotate');\r\n    this.rotate = mat3.create();\r\n    this.objPositionLocation = gl.getUniformLocation(program,'u_obj_position');\r\n\r\n\r\n    // ワールド・ビュー変換行列\r\n    this.viewProjectionLocation = gl.getUniformLocation(program,'u_worldViewProjection');\r\n    this.viewProjection = mat4.create();\r\n    this.eyeLocation = gl.getUniformLocation(program,'u_eye');\r\n    this.eye = vec3.create();\r\n    vec3.set(this.eye,0,0,1);\r\n    \r\n\r\n    // 平行光源の方向ベクトル\r\n    \r\n    this.lightLocation = gl.getUniformLocation(program,'u_light');\r\n    this.lightDirection = vec3.create();\r\n    vec3.set(this.lightDirection,0,0,1);\r\n\r\n    // 環境光\r\n    this.ambient = vec3.create();\r\n    this.ambientLocation = gl.getUniformLocation(program,'u_ambient');\r\n    vec3.set(this.ambient,0.2,0.2,0.2);\r\n\r\n    // カラーパレット\r\n    this.palleteTexture = gl.createTexture();\r\n    this.palleteLocation = gl.getUniformLocation(program,'u_pallete');\r\n    \r\n    //gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.palleteTexture);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 256, this.voxelModels.modelInfos.length, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.voxelModels.palletes);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n    this.sampler = gl.createSampler();\r\n    gl.samplerParameteri(this.sampler, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.samplerParameteri(this.sampler, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\r\n    this.count = 0;\r\n    const vmemory = this.voxScreenMemory;\r\n    let px = -70,count=1;\r\n\r\n    for(let offset = 0,eo = vmemory.byteLength;offset < eo;offset += VOX_MEMORY_STRIDE){\r\n      vmemory.setUint32(offset + VOX_OBJ_ATTRIB,0x8003fc00 | count++ | ((count & 0x3) << 20),this.endian);\r\n      vmemory.setFloat32(offset + VOX_OBJ_SCALE,Math.random() * 1.5,this.endian);\r\n      vmemory.setFloat32(offset + VOX_OBJ_POS,Math.random() * 160 - 80,this.endian);\r\n      vmemory.setFloat32(offset + VOX_OBJ_POS + SIZE_PARAM,Math.random() * 100 - 50,this.endian);\r\n      vmemory.setFloat32(offset + VOX_OBJ_POS + SIZE_PARAM * 2,Math.random() * 192 - 128,this.endian);\r\n      vmemory.setFloat32(offset + VOX_OBJ_ANGLE,count,this.endian);\r\n    }\r\n  }\r\n\r\n  // スプライトを描画\r\n  render(screen) {\r\n    const gl = this.gl;\r\n\r\n    // プログラムの指定\r\n    gl.useProgram(this.program);\r\n\r\n    // VoxBufferの内容を更新\r\n    //gl.bindBuffer(gl.ARRAY_BUFFER,this.buffer);\r\n    //gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.voxBuffer);\r\n\r\n    // VAOをバインド\r\n    gl.bindVertexArray(this.vao);\r\n    const memory = this.voxScreenMemory;\r\n    const endian = this.endian;\r\n\r\n    // カラーパレットをバインド\r\n    gl.activeTexture(this.gl.TEXTURE0);\r\n    gl.bindTexture(this.gl.TEXTURE_2D,this.palleteTexture);\r\n    gl.bindSampler(0,this.sampler);\r\n    gl.uniform1i(this.palleteLocation,0);\r\n\r\n    mat4.multiply(this.viewProjection, screen.uniforms.viewProjection, this.worldMatrix);\r\n    gl.uniformMatrix4fv(this.viewProjectionLocation, false,this.viewProjection);\r\n    gl.uniform3fv(this.eyeLocation, this.eye);\r\n    gl.uniform3fv(this.lightLocation, this.lightDirection);\r\n    gl.uniform3fv(this.ambientLocation, this.ambient);\r\n    \r\n\r\n    for(let offset = 0,eo = memory.byteLength;offset < eo;offset += VOX_MEMORY_STRIDE){\r\n\r\n      // 表示ビットが立っていたら表示    \r\n      let attribute = memory.getUint32(offset + VOX_OBJ_ATTRIB,this.endian);  \r\n      if( attribute & 0x80000000){\r\n\r\n        // uniform変数を更新\r\n        let axis = new Float32Array(memory.buffer,memory.byteOffset + offset + VOX_OBJ_AXIS,3);\r\n        vec3.set(axis,1,-1,-1);\r\n        vec3.normalize(axis,axis);\r\n        let c = memory.getFloat32(offset + VOX_OBJ_ANGLE,endian) + 0.04;\r\n        memory.setFloat32(offset + VOX_OBJ_ANGLE,c,endian);\r\n        setRotate(this.rotate,memory.getFloat32(offset + VOX_OBJ_ANGLE,endian),axis);\r\n\r\n        gl.uniform1f(this.scaleLocation,memory.getFloat32(offset + VOX_OBJ_SCALE,endian));\r\n        gl.uniformMatrix3fv(this.rotateLocation,false,this.rotate);\r\n        gl.uniform3fv(this.objPositionLocation,new Float32Array(memory.buffer,memory.byteOffset + offset + VOX_OBJ_POS,3));\r\n\r\n        // UBO\r\n        // gl.bindBuffer(gl.UNIFORM_BUFFER,this.objAttrBuffer);\r\n        // gl.bufferSubData(gl.UNIFORM_BUFFER,0,this.voxScreenBuffer,offset,VOX_MEMORY_STRIDE);\r\n        // gl.bindBuffer(gl.UNIFORM_BUFFER,null);\r\n\r\n        const objInfo = this.voxelModels.modelInfos[(attribute & 0x1ff00000) >> 20];\r\n        if(attribute & 0x20000){\r\n          // use default pallet\r\n          attribute = (attribute & 0b11111111111111111111111000000000) | objInfo.index;\r\n          memory.setUint32(offset + VOX_OBJ_ATTRIB,attribute,endian);\r\n        }\r\n\r\n        gl.uniform1ui(this.attribLocation,memory.getUint32(offset + VOX_OBJ_ATTRIB,endian));\r\n\r\n    \r\n        // 描画命令の発行\r\n        gl.drawArrays(gl.POINTS, objInfo.vindex,objInfo.count);\r\n\r\n      }\r\n\r\n    }\r\n    this.count += 0.04;\r\n  }\r\n\r\n}\r\n\r\nVox.prototype.MEMORY_SIZE_NEEDED = VOX_MEMORY_STRIDE * VOX_OBJ_MAX;\r\n\r\n","'use strict';\r\n\r\nimport {Console} from './console.js';\r\nimport {Vox,VoxelModel} from './voxscreen.js';\r\n\r\n// let display = true;\r\nlet play = false;\r\n\r\nwindow.addEventListener('load',()=>{\r\n\r\n  let playButton = document.getElementById('playbutton');\r\n  playButton.addEventListener('click',function(){\r\n      if(!play){\r\n        playButton.setAttribute('class','hidden');\r\n        play = true;\r\n        start();\r\n      }\r\n  });\r\n \r\n});\r\n\r\nasync function start(){\r\n  try {\r\n  const con = new Console(160,100);\r\n\r\n  const textBitmap = new Uint8Array(\r\n    await fetch('./font.bin')\r\n      .then(r=>r.arrayBuffer()));\r\n  \r\n  const memory = new ArrayBuffer(con.MEMORY_SIZE_NEEDED + Vox.prototype.MEMORY_SIZE_NEEDED);\r\n\r\n  let offset = 0;\r\n  con.initConsole({textBitmap:textBitmap,memory:memory,offset:offset});\r\n  offset += con.MEMORY_SIZE_NEEDED;\r\n  const gl = con.gl;\r\n  const gl2 = con.gl2;\r\n\r\n  //const voxmodel = new Vox({gl2:gl2,data:await loadVox('myship.bin')});\r\n  const voxelModels = await VoxelModel.loadFromUrls([\r\n    'myship.bin',\r\n    'q.bin',\r\n    'q1.bin',\r\n    'chr.bin'\r\n  ]);\r\n\r\n  const vox = new Vox({gl2:gl2,voxelModels:voxelModels,memory:memory,offset:offset});\r\n\r\n  //const myship = new SceneNode(model);\r\n  con.vscreen.appendScene(vox);\r\n\r\n  // cube.source.translation[2] = 0;\r\n  // //m4.scale(cube.localMatrix,[20,20,20],cube.localMatrix);\r\n  // cube.source.scale = vec3.fromValues(50,50,50);\r\n  // con.vscreen.appendScene(cube);\r\n\r\n  // const cube2 = new SceneNode(model);\r\n  // cube2.source.translation = vec3.fromValues(2,0,0);\r\n\r\n  // cube2.source.scale = vec3.fromValues(0.5,0.5,0.5);\r\n  \r\n  // con.vscreen.appendScene(cube2,cube);\r\n\r\n  \r\n  // WebAssembly側のメモリ\r\n  let mem ;\r\n\r\n  // コンパイル時に引き渡すオブジェクト\r\n  // envというプロパティにエクスポートしたいものを入れる\r\n\r\n  const exportToWasm = {\r\n    env:{\r\n      consoleLogString:consoleLogString,\r\n      consoleValue:consoleValue,\r\n      acos:Math.acos,\r\n      acosh:Math.acosh,\r\n      asin:Math.asin,\r\n      asinh:Math.asinh,\r\n      atan:Math.atan,\r\n      atanh:Math.atanh,\r\n      atan2:Math.atan2,\r\n      cbrt:Math.cbrt,\r\n      ceil:Math.ceil,\r\n      clz32:Math.clz32,\r\n      cos:Math.cos,\r\n      cosh:Math.cosh,\r\n      exp:Math.exp,\r\n      expm1:Math.expm1,\r\n      floor:Math.floor,\r\n      fround:Math.fround,\r\n      imul:Math.imul,\r\n      log:Math.log,\r\n      log1p:Math.log1p,\r\n      log10:Math.log10,\r\n      log2:Math.log2,\r\n      pow:Math.pow,\r\n      round:Math.round,\r\n      sign:Math.sign,\r\n      sin:Math.sin,\r\n      sinh:Math.sinh,\r\n      sqrt:Math.sqrt,\r\n      tan:Math.tan,\r\n      tanh:Math.tanh\r\n     }\r\n  };\r\n\r\n  function consoleValue(v){\r\n    console.log(v);\r\n  }\r\n  \r\n  function consoleLogString(index) {\r\n\r\n    // 先頭の4byte(uint32)に文字列の長さが入っている\r\n    const length = mem.getUint32(index,true);\r\n\r\n    // 文字列は長さの後に続けて入っている\r\n    const array = new Uint16Array(mem.buffer,index + 4,length);\r\n    const str = new TextDecoder('utf-16').decode(array);\r\n    //const str = String.fromCharCode(...array);\r\n    alert(str);\r\n  }\r\n  \r\n  // WebAssembly.instantiateStreaming(fetch(\"./wa/test.wasm\"),exportToWasm).then(mod => {\r\n  //   const test = mod.instance.exports.test;\r\n  //   mem = new DataView(mod.instance.exports.memory.buffer);\r\n  //   test();\r\n  // });\r\n\r\n  let time = 0;\r\n  function main(){\r\n      time += 0.02;\r\n      // cube.source.rotation[1] = time;\r\n      // cube2.source.rotation[2] = time;\r\n      // sprite.source.rotation[0] = time/2;\r\n      // sprite.source.translation[2] = 60.0;\r\n      // sprite.source.rotation[1] = time/2;\r\n      //con.text.print(0,0,'WebGL2 Point Sprite ｦﾂｶｯﾀ Spriteﾋｮｳｼﾞ TEST',true,7,1);\r\n\r\n      con.render(time);\r\n      // const spriteBuffer = sprite.spriteBuffer;\r\n      // for(let i = 0;i < 512;++i){\r\n      //   const sgn = i & 1 ? -1 : 1; \r\n      //   spriteBuffer.setRotate(i,sgn * time * 2);\r\n      // }\r\n      requestAnimationFrame(main);\r\n  }\r\n  main();\r\n  } catch (e) {\r\n  alert(e.stack);\r\n  }\r\n}\r\n\r\n// function initSprite(sprite){\r\n//   const spriteBuffer = sprite.spriteBuffer;\r\n//   const cellSize = 24;\r\n//   let idx = 0;\r\n//   //let z = 320;\r\n//   for(let z = -cellSize * 4 ,ez = cellSize * 4 ;z < ez;z += cellSize ){\r\n//     for(let y = -cellSize * 4,ey = cellSize * 4;y < ey;y += cellSize){\r\n//       for(let x = -cellSize * 4,ex = cellSize * 4;x < ex;x += cellSize){\r\n//         const pos = spriteBuffer.getPosition(idx);\r\n//         pos[0] = x;pos[1] = y;pos[2] = z;\r\n//         const color = spriteBuffer.getColor(idx);\r\n//         color[0] = color[1] = color[2] = color[3] = 0xff;\r\n//         spriteBuffer.setVisible(idx,true);\r\n//         spriteBuffer.setScale(idx,3);\r\n//         const cellPosSize = spriteBuffer.getCellPosSize(idx);\r\n//         cellPosSize[0] = 0 + (idx & 3) * 2;// x\r\n//         cellPosSize[1] = 4;// y\r\n//         cellPosSize[2] = 2;// * 8 = 32px: width\r\n//         cellPosSize[3] = 2;// don't use\r\n//         ++idx;\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\n\r\n\r\n"],"names":["glMatrix.ARRAY_TYPE","create","glMatrix.EPSILON","fromValues","normalize","forEach","vec4.normalize","vec3.create","vec3.fromValues","dot","vec3.dot","vec3.cross","vec3.len","vec3.normalize","mat3.create","mat4.create","mat4.fromTranslation","mat4.scale","mat4.rotateX","mat4.rotateY","mat4.rotateZ","mat4.identity","mat4.multiply","mat4.copy","vec4.fromValues","mat4.perspective","mat4.lookAt","mat4.invert","vs","fs","vec3.clone","vec3.set"],"mappings":"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IAAI,OAAO,IAAI,CAAC;EAChB,GAAG;EACH,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;;EAElB,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACtD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACtD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACtD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACtD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACtD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;;EAEtD,EAAE,OAAO,GAAG,CAAC;EACb,CAAC;AACD,AA6DA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,SAAS,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;EACpC,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACvD,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;EAEzD;EACA,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAClD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;EAC7C,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;EAC7C,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;EAC7C,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;;EAE7C,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7C,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;EAC7C,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;EAC7C,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;EAC7C,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;;EAE7C,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/C,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;EAC7C,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;EAC7C,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;EAC9C,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;;EAE9C,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACjD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;EAC9C,EAAE,GAA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CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAChC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC5B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC5B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC5B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC5B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC5B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC5B,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC5B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC5B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC5B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC5B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC5B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC5B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC5B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EAC5B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;;EAE5B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;;EAEjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;EACjC,QAA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"}